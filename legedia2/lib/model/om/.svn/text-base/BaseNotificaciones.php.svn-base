<?php

/**
 * Base class that represents a row from the 'notificaciones' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Wed Oct 27 21:17:36 2010
 *
 * @package    lib.model.om
 */
abstract class BaseNotificaciones extends BaseObject  implements Persistent {


  const PEER = 'NotificacionesPeer';

	/**
	 * The Peer class.
	 * Instance provides a convenient way of calling static methods on a class
	 * that calling code may not be able to identify.
	 * @var        NotificacionesPeer
	 */
	protected static $peer;

	/**
	 * The value for the notid field.
	 * @var        int
	 */
	protected $notid;

	/**
	 * The value for the soporte field.
	 * @var        string
	 */
	protected $soporte;

	/**
	 * The value for the tipo field.
	 * @var        string
	 */
	protected $tipo;

	/**
	 * The value for the tipo_noti field.
	 * @var        int
	 */
	protected $tipo_noti;

	/**
	 * The value for the id_fichero field.
	 * @var        int
	 */
	protected $id_fichero;

	/**
	 * The value for the fecha field.
	 * @var        string
	 */
	protected $fecha;

	/**
	 * The value for the hora_proceso field.
	 * @var        string
	 */
	protected $hora_proceso;

	/**
	 * The value for the procesado field.
	 * Note: this column has a database default value of: 0
	 * @var        int
	 */
	protected $procesado;

	/**
	 * The value for the hay_que_parar field.
	 * Note: this column has a database default value of: 0
	 * @var        int
	 */
	protected $hay_que_parar;

	/**
	 * The value for the modelo field.
	 * @var        string
	 */
	protected $modelo;

	/**
	 * The value for the titularidad field.
	 * @var        string
	 */
	protected $titularidad;

	/**
	 * The value for the presentacion field.
	 * @var        string
	 */
	protected $presentacion;

	/**
	 * The value for the forma field.
	 * @var        string
	 */
	protected $forma;

	/**
	 * The value for the id_upload field.
	 * @var        string
	 */
	protected $id_upload;

	/**
	 * The value for the pf_razon_s field.
	 * @var        string
	 */
	protected $pf_razon_s;

	/**
	 * The value for the pf_cif_nif field.
	 * @var        string
	 */
	protected $pf_cif_nif;

	/**
	 * The value for the pf_nombre field.
	 * @var        string
	 */
	protected $pf_nombre;

	/**
	 * The value for the pf_apellido1 field.
	 * @var        string
	 */
	protected $pf_apellido1;

	/**
	 * The value for the pf_apellido2 field.
	 * @var        string
	 */
	protected $pf_apellido2;

	/**
	 * The value for the pf_nif field.
	 * @var        string
	 */
	protected $pf_nif;

	/**
	 * The value for the pf_cargo field.
	 * @var        string
	 */
	protected $pf_cargo;

	/**
	 * The value for the dec_razon_s field.
	 * @var        string
	 */
	protected $dec_razon_s;

	/**
	 * The value for the dec_direccion field.
	 * @var        string
	 */
	protected $dec_direccion;

	/**
	 * The value for the dec_localidad field.
	 * @var        string
	 */
	protected $dec_localidad;

	/**
	 * The value for the dec_cp field.
	 * @var        string
	 */
	protected $dec_cp;

	/**
	 * The value for the dec_provincia field.
	 * @var        string
	 */
	protected $dec_provincia;

	/**
	 * The value for the dec_pais field.
	 * @var        string
	 */
	protected $dec_pais;

	/**
	 * The value for the dec_tel field.
	 * @var        string
	 */
	protected $dec_tel;

	/**
	 * The value for the dec_fax field.
	 * @var        string
	 */
	protected $dec_fax;

	/**
	 * The value for the dec_mail field.
	 * @var        string
	 */
	protected $dec_mail;

	/**
	 * The value for the dec_forma field.
	 * @var        int
	 */
	protected $dec_forma;

	/**
	 * The value for the rf_nombre field.
	 * @var        string
	 */
	protected $rf_nombre;

	/**
	 * The value for the rf_actividad field.
	 * @var        string
	 */
	protected $rf_actividad;

	/**
	 * The value for the rf_cif field.
	 * @var        string
	 */
	protected $rf_cif;

	/**
	 * The value for the rf_domicilio field.
	 * @var        string
	 */
	protected $rf_domicilio;

	/**
	 * The value for the rf_localidad field.
	 * @var        string
	 */
	protected $rf_localidad;

	/**
	 * The value for the rf_cp field.
	 * @var        string
	 */
	protected $rf_cp;

	/**
	 * The value for the rf_provincia field.
	 * @var        string
	 */
	protected $rf_provincia;

	/**
	 * The value for the rf_pais field.
	 * @var        string
	 */
	protected $rf_pais;

	/**
	 * The value for the rf_tel field.
	 * @var        string
	 */
	protected $rf_tel;

	/**
	 * The value for the rf_fax field.
	 * @var        string
	 */
	protected $rf_fax;

	/**
	 * The value for the rf_mail field.
	 * @var        string
	 */
	protected $rf_mail;

	/**
	 * The value for the dr_nombreof field.
	 * @var        string
	 */
	protected $dr_nombreof;

	/**
	 * The value for the dr_cif field.
	 * @var        string
	 */
	protected $dr_cif;

	/**
	 * The value for the dr_dirpostal field.
	 * @var        string
	 */
	protected $dr_dirpostal;

	/**
	 * The value for the dr_localidad field.
	 * @var        string
	 */
	protected $dr_localidad;

	/**
	 * The value for the dr_cp field.
	 * @var        string
	 */
	protected $dr_cp;

	/**
	 * The value for the dr_provincia field.
	 * @var        string
	 */
	protected $dr_provincia;

	/**
	 * The value for the dr_pais field.
	 * @var        string
	 */
	protected $dr_pais;

	/**
	 * The value for the dr_tel field.
	 * @var        string
	 */
	protected $dr_tel;

	/**
	 * The value for the dr_fax field.
	 * @var        string
	 */
	protected $dr_fax;

	/**
	 * The value for the dr_mail field.
	 * @var        string
	 */
	protected $dr_mail;

	/**
	 * The value for the tipo_solicitud field.
	 * @var        int
	 */
	protected $tipo_solicitud;

	/**
	 * The value for the ac_mod_responsable field.
	 * @var        int
	 */
	protected $ac_mod_responsable;

	/**
	 * The value for the ac_mod_cif_nif_ant field.
	 * @var        string
	 */
	protected $ac_mod_cif_nif_ant;

	/**
	 * The value for the ac_mod_servicio_unidad field.
	 * @var        int
	 */
	protected $ac_mod_servicio_unidad;

	/**
	 * The value for the ac_mod_disposicion field.
	 * @var        int
	 */
	protected $ac_mod_disposicion;

	/**
	 * The value for the ac_mod_iden_finalid field.
	 * @var        int
	 */
	protected $ac_mod_iden_finalid;

	/**
	 * The value for the ac_mod_encargado field.
	 * @var        int
	 */
	protected $ac_mod_encargado;

	/**
	 * The value for the ac_mod_estruct_sistema field.
	 * @var        int
	 */
	protected $ac_mod_estruct_sistema;

	/**
	 * The value for the ac_mod_medidas_seg field.
	 * @var        int
	 */
	protected $ac_mod_medidas_seg;

	/**
	 * The value for the ac_mod_origen field.
	 * @var        int
	 */
	protected $ac_mod_origen;

	/**
	 * The value for the ac_mod_trans_inter field.
	 * @var        int
	 */
	protected $ac_mod_trans_inter;

	/**
	 * The value for the ac_mod_comunic_ces field.
	 * @var        int
	 */
	protected $ac_mod_comunic_ces;

	/**
	 * The value for the ac_supr_motivos field.
	 * @var        string
	 */
	protected $ac_supr_motivos;

	/**
	 * The value for the ac_supr_destino_previsiones field.
	 * @var        string
	 */
	protected $ac_supr_destino_previsiones;

	/**
	 * The value for the ac_supr_cifnif field.
	 * @var        string
	 */
	protected $ac_supr_cifnif;

	/**
	 * The value for the et_nombre field.
	 * @var        string
	 */
	protected $et_nombre;

	/**
	 * The value for the et_cif field.
	 * @var        string
	 */
	protected $et_cif;

	/**
	 * The value for the et_dirpostal field.
	 * @var        string
	 */
	protected $et_dirpostal;

	/**
	 * The value for the et_localidad field.
	 * @var        string
	 */
	protected $et_localidad;

	/**
	 * The value for the et_cp field.
	 * @var        string
	 */
	protected $et_cp;

	/**
	 * The value for the et_provincia field.
	 * @var        string
	 */
	protected $et_provincia;

	/**
	 * The value for the et_pais field.
	 * @var        string
	 */
	protected $et_pais;

	/**
	 * The value for the et_tel field.
	 * @var        string
	 */
	protected $et_tel;

	/**
	 * The value for the et_fax field.
	 * @var        string
	 */
	protected $et_fax;

	/**
	 * The value for the et_mail field.
	 * @var        string
	 */
	protected $et_mail;

	/**
	 * The value for the idn_nombre field.
	 * @var        string
	 */
	protected $idn_nombre;

	/**
	 * The value for the idn_descripcion field.
	 * @var        string
	 */
	protected $idn_descripcion;

	/**
	 * The value for the idn_finalidades field.
	 * @var        string
	 */
	protected $idn_finalidades;

	/**
	 * The value for the indica_inte field.
	 * @var        int
	 */
	protected $indica_inte;

	/**
	 * The value for the indica_otras field.
	 * @var        int
	 */
	protected $indica_otras;

	/**
	 * The value for the indic_fap field.
	 * @var        int
	 */
	protected $indic_fap;

	/**
	 * The value for the indic_rp field.
	 * @var        int
	 */
	protected $indic_rp;

	/**
	 * The value for the indic_ep field.
	 * @var        int
	 */
	protected $indic_ep;

	/**
	 * The value for the indic_ap field.
	 * @var        int
	 */
	protected $indic_ap;

	/**
	 * The value for the op_colectivos field.
	 * @var        string
	 */
	protected $op_colectivos;

	/**
	 * The value for the op_otroscol field.
	 * @var        string
	 */
	protected $op_otroscol;

	/**
	 * The value for the ind_ide field.
	 * @var        int
	 */
	protected $ind_ide;

	/**
	 * The value for the ind_as field.
	 * @var        int
	 */
	protected $ind_as;

	/**
	 * The value for the ind_r field.
	 * @var        int
	 */
	protected $ind_r;

	/**
	 * The value for the ind_c field.
	 * @var        int
	 */
	protected $ind_c;

	/**
	 * The value for the ind_re field.
	 * @var        int
	 */
	protected $ind_re;

	/**
	 * The value for the ind_sal field.
	 * @var        int
	 */
	protected $ind_sal;

	/**
	 * The value for the ind_sexo field.
	 * @var        int
	 */
	protected $ind_sexo;

	/**
	 * The value for the ind_nif field.
	 * @var        int
	 */
	protected $ind_nif;

	/**
	 * The value for the ind_ss field.
	 * @var        int
	 */
	protected $ind_ss;

	/**
	 * The value for the ind_n_a field.
	 * @var        int
	 */
	protected $ind_n_a;

	/**
	 * The value for the ind_ts field.
	 * @var        int
	 */
	protected $ind_ts;

	/**
	 * The value for the ind_dir field.
	 * @var        int
	 */
	protected $ind_dir;

	/**
	 * The value for the ind_tel field.
	 * @var        int
	 */
	protected $ind_tel;

	/**
	 * The value for the ind_huella field.
	 * @var        int
	 */
	protected $ind_huella;

	/**
	 * The value for the ind_img field.
	 * @var        int
	 */
	protected $ind_img;

	/**
	 * The value for the ind_marcas field.
	 * @var        int
	 */
	protected $ind_marcas;

	/**
	 * The value for the ind_firma field.
	 * @var        int
	 */
	protected $ind_firma;

	/**
	 * The value for the td_otrosprotegidos field.
	 * @var        string
	 */
	protected $td_otrosprotegidos;

	/**
	 * The value for the td_otrostipificados field.
	 * @var        string
	 */
	protected $td_otrostipificados;

	/**
	 * The value for the td_otrostiposdatos field.
	 * @var        string
	 */
	protected $td_otrostiposdatos;

	/**
	 * The value for the td_tratamiento field.
	 * @var        string
	 */
	protected $td_tratamiento;

	/**
	 * The value for the seguridad field.
	 * @var        string
	 */
	protected $seguridad;

	/**
	 * The value for the cd_destinatarios field.
	 * @var        string
	 */
	protected $cd_destinatarios;

	/**
	 * The value for the cd_otrosdestinatarios field.
	 * @var        string
	 */
	protected $cd_otrosdestinatarios;

	/**
	 * The value for the paises_destina field.
	 * @var        string
	 */
	protected $paises_destina;

	/**
	 * The value for the cat_destina field.
	 * @var        string
	 */
	protected $cat_destina;

	/**
	 * The value for the otro_pais_destina field.
	 * @var        string
	 */
	protected $otro_pais_destina;

	/**
	 * @var        Formulario
	 */
	protected $aFormulario;

	/**
	 * Flag to prevent endless save loop, if this object is referenced
	 * by another object which falls in this transaction.
	 * @var        boolean
	 */
	protected $alreadyInSave = false;

	/**
	 * Flag to prevent endless validation loop, if this object is referenced
	 * by another object which falls in this transaction.
	 * @var        boolean
	 */
	protected $alreadyInValidation = false;

	/**
	 * Initializes internal state of BaseNotificaciones object.
	 * @see        applyDefaults()
	 */
	public function __construct()
	{
		parent::__construct();
		$this->applyDefaultValues();
	}

	/**
	 * Applies default values to this object.
	 * This method should be called from the object's constructor (or
	 * equivalent initialization method).
	 * @see        __construct()
	 */
	public function applyDefaultValues()
	{
		$this->procesado = 0;
		$this->hay_que_parar = 0;
	}

	/**
	 * Get the [notid] column value.
	 * 
	 * @return     int
	 */
	public function getNotid()
	{
		return $this->notid;
	}

	/**
	 * Get the [soporte] column value.
	 * 
	 * @return     string
	 */
	public function getSoporte()
	{
		return $this->soporte;
	}

	/**
	 * Get the [tipo] column value.
	 * 
	 * @return     string
	 */
	public function getTipo()
	{
		return $this->tipo;
	}

	/**
	 * Get the [tipo_noti] column value.
	 * 
	 * @return     int
	 */
	public function getTipoNoti()
	{
		return $this->tipo_noti;
	}

	/**
	 * Get the [id_fichero] column value.
	 * 
	 * @return     int
	 */
	public function getIdFichero()
	{
		return $this->id_fichero;
	}

	/**
	 * Get the [fecha] column value.
	 * 
	 * @return     string
	 */
	public function getFecha()
	{
		return $this->fecha;
	}

	/**
	 * Get the [hora_proceso] column value.
	 * 
	 * @return     string
	 */
	public function getHoraProceso()
	{
		return $this->hora_proceso;
	}

	/**
	 * Get the [procesado] column value.
	 * 
	 * @return     int
	 */
	public function getProcesado()
	{
		return $this->procesado;
	}

	/**
	 * Get the [hay_que_parar] column value.
	 * 
	 * @return     int
	 */
	public function getHayQueParar()
	{
		return $this->hay_que_parar;
	}

	/**
	 * Get the [modelo] column value.
	 * 
	 * @return     string
	 */
	public function getModelo()
	{
		return $this->modelo;
	}

	/**
	 * Get the [titularidad] column value.
	 * 
	 * @return     string
	 */
	public function getTitularidad()
	{
		return $this->titularidad;
	}

	/**
	 * Get the [presentacion] column value.
	 * 
	 * @return     string
	 */
	public function getPresentacion()
	{
		return $this->presentacion;
	}

	/**
	 * Get the [forma] column value.
	 * 
	 * @return     string
	 */
	public function getForma()
	{
		return $this->forma;
	}

	/**
	 * Get the [id_upload] column value.
	 * 
	 * @return     string
	 */
	public function getIdUpload()
	{
		return $this->id_upload;
	}

	/**
	 * Get the [pf_razon_s] column value.
	 * 
	 * @return     string
	 */
	public function getPfRazonS()
	{
		return $this->pf_razon_s;
	}

	/**
	 * Get the [pf_cif_nif] column value.
	 * 
	 * @return     string
	 */
	public function getPfCifNif()
	{
		return $this->pf_cif_nif;
	}

	/**
	 * Get the [pf_nombre] column value.
	 * 
	 * @return     string
	 */
	public function getPfNombre()
	{
		return $this->pf_nombre;
	}

	/**
	 * Get the [pf_apellido1] column value.
	 * 
	 * @return     string
	 */
	public function getPfApellido1()
	{
		return $this->pf_apellido1;
	}

	/**
	 * Get the [pf_apellido2] column value.
	 * 
	 * @return     string
	 */
	public function getPfApellido2()
	{
		return $this->pf_apellido2;
	}

	/**
	 * Get the [pf_nif] column value.
	 * 
	 * @return     string
	 */
	public function getPfNif()
	{
		return $this->pf_nif;
	}

	/**
	 * Get the [pf_cargo] column value.
	 * 
	 * @return     string
	 */
	public function getPfCargo()
	{
		return $this->pf_cargo;
	}

	/**
	 * Get the [dec_razon_s] column value.
	 * 
	 * @return     string
	 */
	public function getDecRazonS()
	{
		return $this->dec_razon_s;
	}

	/**
	 * Get the [dec_direccion] column value.
	 * 
	 * @return     string
	 */
	public function getDecDireccion()
	{
		return $this->dec_direccion;
	}

	/**
	 * Get the [dec_localidad] column value.
	 * 
	 * @return     string
	 */
	public function getDecLocalidad()
	{
		return $this->dec_localidad;
	}

	/**
	 * Get the [dec_cp] column value.
	 * 
	 * @return     string
	 */
	public function getDecCp()
	{
		return $this->dec_cp;
	}

	/**
	 * Get the [dec_provincia] column value.
	 * 
	 * @return     string
	 */
	public function getDecProvincia()
	{
		return $this->dec_provincia;
	}

	/**
	 * Get the [dec_pais] column value.
	 * 
	 * @return     string
	 */
	public function getDecPais()
	{
		return $this->dec_pais;
	}

	/**
	 * Get the [dec_tel] column value.
	 * 
	 * @return     string
	 */
	public function getDecTel()
	{
		return $this->dec_tel;
	}

	/**
	 * Get the [dec_fax] column value.
	 * 
	 * @return     string
	 */
	public function getDecFax()
	{
		return $this->dec_fax;
	}

	/**
	 * Get the [dec_mail] column value.
	 * 
	 * @return     string
	 */
	public function getDecMail()
	{
		return $this->dec_mail;
	}

	/**
	 * Get the [dec_forma] column value.
	 * 
	 * @return     int
	 */
	public function getDecForma()
	{
		return $this->dec_forma;
	}

	/**
	 * Get the [rf_nombre] column value.
	 * 
	 * @return     string
	 */
	public function getRfNombre()
	{
		return $this->rf_nombre;
	}

	/**
	 * Get the [rf_actividad] column value.
	 * 
	 * @return     string
	 */
	public function getRfActividad()
	{
		return $this->rf_actividad;
	}

	/**
	 * Get the [rf_cif] column value.
	 * 
	 * @return     string
	 */
	public function getRfCif()
	{
		return $this->rf_cif;
	}

	/**
	 * Get the [rf_domicilio] column value.
	 * 
	 * @return     string
	 */
	public function getRfDomicilio()
	{
		return $this->rf_domicilio;
	}

	/**
	 * Get the [rf_localidad] column value.
	 * 
	 * @return     string
	 */
	public function getRfLocalidad()
	{
		return $this->rf_localidad;
	}

	/**
	 * Get the [rf_cp] column value.
	 * 
	 * @return     string
	 */
	public function getRfCp()
	{
		return $this->rf_cp;
	}

	/**
	 * Get the [rf_provincia] column value.
	 * 
	 * @return     string
	 */
	public function getRfProvincia()
	{
		return $this->rf_provincia;
	}

	/**
	 * Get the [rf_pais] column value.
	 * 
	 * @return     string
	 */
	public function getRfPais()
	{
		return $this->rf_pais;
	}

	/**
	 * Get the [rf_tel] column value.
	 * 
	 * @return     string
	 */
	public function getRfTel()
	{
		return $this->rf_tel;
	}

	/**
	 * Get the [rf_fax] column value.
	 * 
	 * @return     string
	 */
	public function getRfFax()
	{
		return $this->rf_fax;
	}

	/**
	 * Get the [rf_mail] column value.
	 * 
	 * @return     string
	 */
	public function getRfMail()
	{
		return $this->rf_mail;
	}

	/**
	 * Get the [dr_nombreof] column value.
	 * 
	 * @return     string
	 */
	public function getDrNombreof()
	{
		return $this->dr_nombreof;
	}

	/**
	 * Get the [dr_cif] column value.
	 * 
	 * @return     string
	 */
	public function getDrCif()
	{
		return $this->dr_cif;
	}

	/**
	 * Get the [dr_dirpostal] column value.
	 * 
	 * @return     string
	 */
	public function getDrDirpostal()
	{
		return $this->dr_dirpostal;
	}

	/**
	 * Get the [dr_localidad] column value.
	 * 
	 * @return     string
	 */
	public function getDrLocalidad()
	{
		return $this->dr_localidad;
	}

	/**
	 * Get the [dr_cp] column value.
	 * 
	 * @return     string
	 */
	public function getDrCp()
	{
		return $this->dr_cp;
	}

	/**
	 * Get the [dr_provincia] column value.
	 * 
	 * @return     string
	 */
	public function getDrProvincia()
	{
		return $this->dr_provincia;
	}

	/**
	 * Get the [dr_pais] column value.
	 * 
	 * @return     string
	 */
	public function getDrPais()
	{
		return $this->dr_pais;
	}

	/**
	 * Get the [dr_tel] column value.
	 * 
	 * @return     string
	 */
	public function getDrTel()
	{
		return $this->dr_tel;
	}

	/**
	 * Get the [dr_fax] column value.
	 * 
	 * @return     string
	 */
	public function getDrFax()
	{
		return $this->dr_fax;
	}

	/**
	 * Get the [dr_mail] column value.
	 * 
	 * @return     string
	 */
	public function getDrMail()
	{
		return $this->dr_mail;
	}

	/**
	 * Get the [tipo_solicitud] column value.
	 * 
	 * @return     int
	 */
	public function getTipoSolicitud()
	{
		return $this->tipo_solicitud;
	}

	/**
	 * Get the [ac_mod_responsable] column value.
	 * 
	 * @return     int
	 */
	public function getAcModResponsable()
	{
		return $this->ac_mod_responsable;
	}

	/**
	 * Get the [ac_mod_cif_nif_ant] column value.
	 * 
	 * @return     string
	 */
	public function getAcModCifNifAnt()
	{
		return $this->ac_mod_cif_nif_ant;
	}

	/**
	 * Get the [ac_mod_servicio_unidad] column value.
	 * 
	 * @return     int
	 */
	public function getAcModServicioUnidad()
	{
		return $this->ac_mod_servicio_unidad;
	}

	/**
	 * Get the [ac_mod_disposicion] column value.
	 * 
	 * @return     int
	 */
	public function getAcModDisposicion()
	{
		return $this->ac_mod_disposicion;
	}

	/**
	 * Get the [ac_mod_iden_finalid] column value.
	 * 
	 * @return     int
	 */
	public function getAcModIdenFinalid()
	{
		return $this->ac_mod_iden_finalid;
	}

	/**
	 * Get the [ac_mod_encargado] column value.
	 * 
	 * @return     int
	 */
	public function getAcModEncargado()
	{
		return $this->ac_mod_encargado;
	}

	/**
	 * Get the [ac_mod_estruct_sistema] column value.
	 * 
	 * @return     int
	 */
	public function getAcModEstructSistema()
	{
		return $this->ac_mod_estruct_sistema;
	}

	/**
	 * Get the [ac_mod_medidas_seg] column value.
	 * 
	 * @return     int
	 */
	public function getAcModMedidasSeg()
	{
		return $this->ac_mod_medidas_seg;
	}

	/**
	 * Get the [ac_mod_origen] column value.
	 * 
	 * @return     int
	 */
	public function getAcModOrigen()
	{
		return $this->ac_mod_origen;
	}

	/**
	 * Get the [ac_mod_trans_inter] column value.
	 * 
	 * @return     int
	 */
	public function getAcModTransInter()
	{
		return $this->ac_mod_trans_inter;
	}

	/**
	 * Get the [ac_mod_comunic_ces] column value.
	 * 
	 * @return     int
	 */
	public function getAcModComunicCes()
	{
		return $this->ac_mod_comunic_ces;
	}

	/**
	 * Get the [ac_supr_motivos] column value.
	 * 
	 * @return     string
	 */
	public function getAcSuprMotivos()
	{
		return $this->ac_supr_motivos;
	}

	/**
	 * Get the [ac_supr_destino_previsiones] column value.
	 * 
	 * @return     string
	 */
	public function getAcSuprDestinoPrevisiones()
	{
		return $this->ac_supr_destino_previsiones;
	}

	/**
	 * Get the [ac_supr_cifnif] column value.
	 * 
	 * @return     string
	 */
	public function getAcSuprCifnif()
	{
		return $this->ac_supr_cifnif;
	}

	/**
	 * Get the [et_nombre] column value.
	 * 
	 * @return     string
	 */
	public function getEtNombre()
	{
		return $this->et_nombre;
	}

	/**
	 * Get the [et_cif] column value.
	 * 
	 * @return     string
	 */
	public function getEtCif()
	{
		return $this->et_cif;
	}

	/**
	 * Get the [et_dirpostal] column value.
	 * 
	 * @return     string
	 */
	public function getEtDirpostal()
	{
		return $this->et_dirpostal;
	}

	/**
	 * Get the [et_localidad] column value.
	 * 
	 * @return     string
	 */
	public function getEtLocalidad()
	{
		return $this->et_localidad;
	}

	/**
	 * Get the [et_cp] column value.
	 * 
	 * @return     string
	 */
	public function getEtCp()
	{
		return $this->et_cp;
	}

	/**
	 * Get the [et_provincia] column value.
	 * 
	 * @return     string
	 */
	public function getEtProvincia()
	{
		return $this->et_provincia;
	}

	/**
	 * Get the [et_pais] column value.
	 * 
	 * @return     string
	 */
	public function getEtPais()
	{
		return $this->et_pais;
	}

	/**
	 * Get the [et_tel] column value.
	 * 
	 * @return     string
	 */
	public function getEtTel()
	{
		return $this->et_tel;
	}

	/**
	 * Get the [et_fax] column value.
	 * 
	 * @return     string
	 */
	public function getEtFax()
	{
		return $this->et_fax;
	}

	/**
	 * Get the [et_mail] column value.
	 * 
	 * @return     string
	 */
	public function getEtMail()
	{
		return $this->et_mail;
	}

	/**
	 * Get the [idn_nombre] column value.
	 * 
	 * @return     string
	 */
	public function getIdnNombre()
	{
		return $this->idn_nombre;
	}

	/**
	 * Get the [idn_descripcion] column value.
	 * 
	 * @return     string
	 */
	public function getIdnDescripcion()
	{
		return $this->idn_descripcion;
	}

	/**
	 * Get the [idn_finalidades] column value.
	 * 
	 * @return     string
	 */
	public function getIdnFinalidades()
	{
		return $this->idn_finalidades;
	}

	/**
	 * Get the [indica_inte] column value.
	 * 
	 * @return     int
	 */
	public function getIndicaInte()
	{
		return $this->indica_inte;
	}

	/**
	 * Get the [indica_otras] column value.
	 * 
	 * @return     int
	 */
	public function getIndicaOtras()
	{
		return $this->indica_otras;
	}

	/**
	 * Get the [indic_fap] column value.
	 * 
	 * @return     int
	 */
	public function getIndicFap()
	{
		return $this->indic_fap;
	}

	/**
	 * Get the [indic_rp] column value.
	 * 
	 * @return     int
	 */
	public function getIndicRp()
	{
		return $this->indic_rp;
	}

	/**
	 * Get the [indic_ep] column value.
	 * 
	 * @return     int
	 */
	public function getIndicEp()
	{
		return $this->indic_ep;
	}

	/**
	 * Get the [indic_ap] column value.
	 * 
	 * @return     int
	 */
	public function getIndicAp()
	{
		return $this->indic_ap;
	}

	/**
	 * Get the [op_colectivos] column value.
	 * 
	 * @return     string
	 */
	public function getOpColectivos()
	{
		return $this->op_colectivos;
	}

	/**
	 * Get the [op_otroscol] column value.
	 * 
	 * @return     string
	 */
	public function getOpOtroscol()
	{
		return $this->op_otroscol;
	}

	/**
	 * Get the [ind_ide] column value.
	 * 
	 * @return     int
	 */
	public function getIndIde()
	{
		return $this->ind_ide;
	}

	/**
	 * Get the [ind_as] column value.
	 * 
	 * @return     int
	 */
	public function getIndAs()
	{
		return $this->ind_as;
	}

	/**
	 * Get the [ind_r] column value.
	 * 
	 * @return     int
	 */
	public function getIndR()
	{
		return $this->ind_r;
	}

	/**
	 * Get the [ind_c] column value.
	 * 
	 * @return     int
	 */
	public function getIndC()
	{
		return $this->ind_c;
	}

	/**
	 * Get the [ind_re] column value.
	 * 
	 * @return     int
	 */
	public function getIndRe()
	{
		return $this->ind_re;
	}

	/**
	 * Get the [ind_sal] column value.
	 * 
	 * @return     int
	 */
	public function getIndSal()
	{
		return $this->ind_sal;
	}

	/**
	 * Get the [ind_sexo] column value.
	 * 
	 * @return     int
	 */
	public function getIndSexo()
	{
		return $this->ind_sexo;
	}

	/**
	 * Get the [ind_nif] column value.
	 * 
	 * @return     int
	 */
	public function getIndNif()
	{
		return $this->ind_nif;
	}

	/**
	 * Get the [ind_ss] column value.
	 * 
	 * @return     int
	 */
	public function getIndSs()
	{
		return $this->ind_ss;
	}

	/**
	 * Get the [ind_n_a] column value.
	 * 
	 * @return     int
	 */
	public function getIndNA()
	{
		return $this->ind_n_a;
	}

	/**
	 * Get the [ind_ts] column value.
	 * 
	 * @return     int
	 */
	public function getIndTs()
	{
		return $this->ind_ts;
	}

	/**
	 * Get the [ind_dir] column value.
	 * 
	 * @return     int
	 */
	public function getIndDir()
	{
		return $this->ind_dir;
	}

	/**
	 * Get the [ind_tel] column value.
	 * 
	 * @return     int
	 */
	public function getIndTel()
	{
		return $this->ind_tel;
	}

	/**
	 * Get the [ind_huella] column value.
	 * 
	 * @return     int
	 */
	public function getIndHuella()
	{
		return $this->ind_huella;
	}

	/**
	 * Get the [ind_img] column value.
	 * 
	 * @return     int
	 */
	public function getIndImg()
	{
		return $this->ind_img;
	}

	/**
	 * Get the [ind_marcas] column value.
	 * 
	 * @return     int
	 */
	public function getIndMarcas()
	{
		return $this->ind_marcas;
	}

	/**
	 * Get the [ind_firma] column value.
	 * 
	 * @return     int
	 */
	public function getIndFirma()
	{
		return $this->ind_firma;
	}

	/**
	 * Get the [td_otrosprotegidos] column value.
	 * 
	 * @return     string
	 */
	public function getTdOtrosprotegidos()
	{
		return $this->td_otrosprotegidos;
	}

	/**
	 * Get the [td_otrostipificados] column value.
	 * 
	 * @return     string
	 */
	public function getTdOtrostipificados()
	{
		return $this->td_otrostipificados;
	}

	/**
	 * Get the [td_otrostiposdatos] column value.
	 * 
	 * @return     string
	 */
	public function getTdOtrostiposdatos()
	{
		return $this->td_otrostiposdatos;
	}

	/**
	 * Get the [td_tratamiento] column value.
	 * 
	 * @return     string
	 */
	public function getTdTratamiento()
	{
		return $this->td_tratamiento;
	}

	/**
	 * Get the [seguridad] column value.
	 * 
	 * @return     string
	 */
	public function getSeguridad()
	{
		return $this->seguridad;
	}

	/**
	 * Get the [cd_destinatarios] column value.
	 * 
	 * @return     string
	 */
	public function getCdDestinatarios()
	{
		return $this->cd_destinatarios;
	}

	/**
	 * Get the [cd_otrosdestinatarios] column value.
	 * 
	 * @return     string
	 */
	public function getCdOtrosdestinatarios()
	{
		return $this->cd_otrosdestinatarios;
	}

	/**
	 * Get the [paises_destina] column value.
	 * 
	 * @return     string
	 */
	public function getPaisesDestina()
	{
		return $this->paises_destina;
	}

	/**
	 * Get the [cat_destina] column value.
	 * 
	 * @return     string
	 */
	public function getCatDestina()
	{
		return $this->cat_destina;
	}

	/**
	 * Get the [otro_pais_destina] column value.
	 * 
	 * @return     string
	 */
	public function getOtroPaisDestina()
	{
		return $this->otro_pais_destina;
	}

	/**
	 * Set the value of [notid] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setNotid($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->notid !== $v) {
			$this->notid = $v;
			$this->modifiedColumns[] = NotificacionesPeer::NOTID;
		}

		return $this;
	} // setNotid()

	/**
	 * Set the value of [soporte] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setSoporte($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->soporte !== $v) {
			$this->soporte = $v;
			$this->modifiedColumns[] = NotificacionesPeer::SOPORTE;
		}

		return $this;
	} // setSoporte()

	/**
	 * Set the value of [tipo] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setTipo($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->tipo !== $v) {
			$this->tipo = $v;
			$this->modifiedColumns[] = NotificacionesPeer::TIPO;
		}

		return $this;
	} // setTipo()

	/**
	 * Set the value of [tipo_noti] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setTipoNoti($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->tipo_noti !== $v) {
			$this->tipo_noti = $v;
			$this->modifiedColumns[] = NotificacionesPeer::TIPO_NOTI;
		}

		return $this;
	} // setTipoNoti()

	/**
	 * Set the value of [id_fichero] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setIdFichero($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->id_fichero !== $v) {
			$this->id_fichero = $v;
			$this->modifiedColumns[] = NotificacionesPeer::ID_FICHERO;
		}

		if ($this->aFormulario !== null && $this->aFormulario->getIdFormulario() !== $v) {
			$this->aFormulario = null;
		}

		return $this;
	} // setIdFichero()

	/**
	 * Set the value of [fecha] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setFecha($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->fecha !== $v) {
			$this->fecha = $v;
			$this->modifiedColumns[] = NotificacionesPeer::FECHA;
		}

		return $this;
	} // setFecha()

	/**
	 * Set the value of [hora_proceso] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setHoraProceso($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->hora_proceso !== $v) {
			$this->hora_proceso = $v;
			$this->modifiedColumns[] = NotificacionesPeer::HORA_PROCESO;
		}

		return $this;
	} // setHoraProceso()

	/**
	 * Set the value of [procesado] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setProcesado($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->procesado !== $v || $v === 0) {
			$this->procesado = $v;
			$this->modifiedColumns[] = NotificacionesPeer::PROCESADO;
		}

		return $this;
	} // setProcesado()

	/**
	 * Set the value of [hay_que_parar] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setHayQueParar($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->hay_que_parar !== $v || $v === 0) {
			$this->hay_que_parar = $v;
			$this->modifiedColumns[] = NotificacionesPeer::HAY_QUE_PARAR;
		}

		return $this;
	} // setHayQueParar()

	/**
	 * Set the value of [modelo] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setModelo($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->modelo !== $v) {
			$this->modelo = $v;
			$this->modifiedColumns[] = NotificacionesPeer::MODELO;
		}

		return $this;
	} // setModelo()

	/**
	 * Set the value of [titularidad] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setTitularidad($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->titularidad !== $v) {
			$this->titularidad = $v;
			$this->modifiedColumns[] = NotificacionesPeer::TITULARIDAD;
		}

		return $this;
	} // setTitularidad()

	/**
	 * Set the value of [presentacion] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setPresentacion($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->presentacion !== $v) {
			$this->presentacion = $v;
			$this->modifiedColumns[] = NotificacionesPeer::PRESENTACION;
		}

		return $this;
	} // setPresentacion()

	/**
	 * Set the value of [forma] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setForma($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->forma !== $v) {
			$this->forma = $v;
			$this->modifiedColumns[] = NotificacionesPeer::FORMA;
		}

		return $this;
	} // setForma()

	/**
	 * Set the value of [id_upload] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setIdUpload($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->id_upload !== $v) {
			$this->id_upload = $v;
			$this->modifiedColumns[] = NotificacionesPeer::ID_UPLOAD;
		}

		return $this;
	} // setIdUpload()

	/**
	 * Set the value of [pf_razon_s] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setPfRazonS($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pf_razon_s !== $v) {
			$this->pf_razon_s = $v;
			$this->modifiedColumns[] = NotificacionesPeer::PF_RAZON_S;
		}

		return $this;
	} // setPfRazonS()

	/**
	 * Set the value of [pf_cif_nif] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setPfCifNif($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pf_cif_nif !== $v) {
			$this->pf_cif_nif = $v;
			$this->modifiedColumns[] = NotificacionesPeer::PF_CIF_NIF;
		}

		return $this;
	} // setPfCifNif()

	/**
	 * Set the value of [pf_nombre] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setPfNombre($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pf_nombre !== $v) {
			$this->pf_nombre = $v;
			$this->modifiedColumns[] = NotificacionesPeer::PF_NOMBRE;
		}

		return $this;
	} // setPfNombre()

	/**
	 * Set the value of [pf_apellido1] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setPfApellido1($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pf_apellido1 !== $v) {
			$this->pf_apellido1 = $v;
			$this->modifiedColumns[] = NotificacionesPeer::PF_APELLIDO1;
		}

		return $this;
	} // setPfApellido1()

	/**
	 * Set the value of [pf_apellido2] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setPfApellido2($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pf_apellido2 !== $v) {
			$this->pf_apellido2 = $v;
			$this->modifiedColumns[] = NotificacionesPeer::PF_APELLIDO2;
		}

		return $this;
	} // setPfApellido2()

	/**
	 * Set the value of [pf_nif] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setPfNif($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pf_nif !== $v) {
			$this->pf_nif = $v;
			$this->modifiedColumns[] = NotificacionesPeer::PF_NIF;
		}

		return $this;
	} // setPfNif()

	/**
	 * Set the value of [pf_cargo] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setPfCargo($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->pf_cargo !== $v) {
			$this->pf_cargo = $v;
			$this->modifiedColumns[] = NotificacionesPeer::PF_CARGO;
		}

		return $this;
	} // setPfCargo()

	/**
	 * Set the value of [dec_razon_s] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setDecRazonS($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dec_razon_s !== $v) {
			$this->dec_razon_s = $v;
			$this->modifiedColumns[] = NotificacionesPeer::DEC_RAZON_S;
		}

		return $this;
	} // setDecRazonS()

	/**
	 * Set the value of [dec_direccion] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setDecDireccion($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dec_direccion !== $v) {
			$this->dec_direccion = $v;
			$this->modifiedColumns[] = NotificacionesPeer::DEC_DIRECCION;
		}

		return $this;
	} // setDecDireccion()

	/**
	 * Set the value of [dec_localidad] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setDecLocalidad($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dec_localidad !== $v) {
			$this->dec_localidad = $v;
			$this->modifiedColumns[] = NotificacionesPeer::DEC_LOCALIDAD;
		}

		return $this;
	} // setDecLocalidad()

	/**
	 * Set the value of [dec_cp] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setDecCp($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dec_cp !== $v) {
			$this->dec_cp = $v;
			$this->modifiedColumns[] = NotificacionesPeer::DEC_CP;
		}

		return $this;
	} // setDecCp()

	/**
	 * Set the value of [dec_provincia] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setDecProvincia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dec_provincia !== $v) {
			$this->dec_provincia = $v;
			$this->modifiedColumns[] = NotificacionesPeer::DEC_PROVINCIA;
		}

		return $this;
	} // setDecProvincia()

	/**
	 * Set the value of [dec_pais] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setDecPais($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dec_pais !== $v) {
			$this->dec_pais = $v;
			$this->modifiedColumns[] = NotificacionesPeer::DEC_PAIS;
		}

		return $this;
	} // setDecPais()

	/**
	 * Set the value of [dec_tel] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setDecTel($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dec_tel !== $v) {
			$this->dec_tel = $v;
			$this->modifiedColumns[] = NotificacionesPeer::DEC_TEL;
		}

		return $this;
	} // setDecTel()

	/**
	 * Set the value of [dec_fax] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setDecFax($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dec_fax !== $v) {
			$this->dec_fax = $v;
			$this->modifiedColumns[] = NotificacionesPeer::DEC_FAX;
		}

		return $this;
	} // setDecFax()

	/**
	 * Set the value of [dec_mail] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setDecMail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dec_mail !== $v) {
			$this->dec_mail = $v;
			$this->modifiedColumns[] = NotificacionesPeer::DEC_MAIL;
		}

		return $this;
	} // setDecMail()

	/**
	 * Set the value of [dec_forma] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setDecForma($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->dec_forma !== $v) {
			$this->dec_forma = $v;
			$this->modifiedColumns[] = NotificacionesPeer::DEC_FORMA;
		}

		return $this;
	} // setDecForma()

	/**
	 * Set the value of [rf_nombre] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setRfNombre($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->rf_nombre !== $v) {
			$this->rf_nombre = $v;
			$this->modifiedColumns[] = NotificacionesPeer::RF_NOMBRE;
		}

		return $this;
	} // setRfNombre()

	/**
	 * Set the value of [rf_actividad] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setRfActividad($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->rf_actividad !== $v) {
			$this->rf_actividad = $v;
			$this->modifiedColumns[] = NotificacionesPeer::RF_ACTIVIDAD;
		}

		return $this;
	} // setRfActividad()

	/**
	 * Set the value of [rf_cif] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setRfCif($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->rf_cif !== $v) {
			$this->rf_cif = $v;
			$this->modifiedColumns[] = NotificacionesPeer::RF_CIF;
		}

		return $this;
	} // setRfCif()

	/**
	 * Set the value of [rf_domicilio] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setRfDomicilio($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->rf_domicilio !== $v) {
			$this->rf_domicilio = $v;
			$this->modifiedColumns[] = NotificacionesPeer::RF_DOMICILIO;
		}

		return $this;
	} // setRfDomicilio()

	/**
	 * Set the value of [rf_localidad] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setRfLocalidad($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->rf_localidad !== $v) {
			$this->rf_localidad = $v;
			$this->modifiedColumns[] = NotificacionesPeer::RF_LOCALIDAD;
		}

		return $this;
	} // setRfLocalidad()

	/**
	 * Set the value of [rf_cp] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setRfCp($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->rf_cp !== $v) {
			$this->rf_cp = $v;
			$this->modifiedColumns[] = NotificacionesPeer::RF_CP;
		}

		return $this;
	} // setRfCp()

	/**
	 * Set the value of [rf_provincia] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setRfProvincia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->rf_provincia !== $v) {
			$this->rf_provincia = $v;
			$this->modifiedColumns[] = NotificacionesPeer::RF_PROVINCIA;
		}

		return $this;
	} // setRfProvincia()

	/**
	 * Set the value of [rf_pais] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setRfPais($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->rf_pais !== $v) {
			$this->rf_pais = $v;
			$this->modifiedColumns[] = NotificacionesPeer::RF_PAIS;
		}

		return $this;
	} // setRfPais()

	/**
	 * Set the value of [rf_tel] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setRfTel($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->rf_tel !== $v) {
			$this->rf_tel = $v;
			$this->modifiedColumns[] = NotificacionesPeer::RF_TEL;
		}

		return $this;
	} // setRfTel()

	/**
	 * Set the value of [rf_fax] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setRfFax($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->rf_fax !== $v) {
			$this->rf_fax = $v;
			$this->modifiedColumns[] = NotificacionesPeer::RF_FAX;
		}

		return $this;
	} // setRfFax()

	/**
	 * Set the value of [rf_mail] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setRfMail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->rf_mail !== $v) {
			$this->rf_mail = $v;
			$this->modifiedColumns[] = NotificacionesPeer::RF_MAIL;
		}

		return $this;
	} // setRfMail()

	/**
	 * Set the value of [dr_nombreof] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setDrNombreof($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dr_nombreof !== $v) {
			$this->dr_nombreof = $v;
			$this->modifiedColumns[] = NotificacionesPeer::DR_NOMBREOF;
		}

		return $this;
	} // setDrNombreof()

	/**
	 * Set the value of [dr_cif] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setDrCif($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dr_cif !== $v) {
			$this->dr_cif = $v;
			$this->modifiedColumns[] = NotificacionesPeer::DR_CIF;
		}

		return $this;
	} // setDrCif()

	/**
	 * Set the value of [dr_dirpostal] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setDrDirpostal($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dr_dirpostal !== $v) {
			$this->dr_dirpostal = $v;
			$this->modifiedColumns[] = NotificacionesPeer::DR_DIRPOSTAL;
		}

		return $this;
	} // setDrDirpostal()

	/**
	 * Set the value of [dr_localidad] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setDrLocalidad($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dr_localidad !== $v) {
			$this->dr_localidad = $v;
			$this->modifiedColumns[] = NotificacionesPeer::DR_LOCALIDAD;
		}

		return $this;
	} // setDrLocalidad()

	/**
	 * Set the value of [dr_cp] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setDrCp($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dr_cp !== $v) {
			$this->dr_cp = $v;
			$this->modifiedColumns[] = NotificacionesPeer::DR_CP;
		}

		return $this;
	} // setDrCp()

	/**
	 * Set the value of [dr_provincia] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setDrProvincia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dr_provincia !== $v) {
			$this->dr_provincia = $v;
			$this->modifiedColumns[] = NotificacionesPeer::DR_PROVINCIA;
		}

		return $this;
	} // setDrProvincia()

	/**
	 * Set the value of [dr_pais] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setDrPais($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dr_pais !== $v) {
			$this->dr_pais = $v;
			$this->modifiedColumns[] = NotificacionesPeer::DR_PAIS;
		}

		return $this;
	} // setDrPais()

	/**
	 * Set the value of [dr_tel] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setDrTel($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dr_tel !== $v) {
			$this->dr_tel = $v;
			$this->modifiedColumns[] = NotificacionesPeer::DR_TEL;
		}

		return $this;
	} // setDrTel()

	/**
	 * Set the value of [dr_fax] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setDrFax($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dr_fax !== $v) {
			$this->dr_fax = $v;
			$this->modifiedColumns[] = NotificacionesPeer::DR_FAX;
		}

		return $this;
	} // setDrFax()

	/**
	 * Set the value of [dr_mail] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setDrMail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->dr_mail !== $v) {
			$this->dr_mail = $v;
			$this->modifiedColumns[] = NotificacionesPeer::DR_MAIL;
		}

		return $this;
	} // setDrMail()

	/**
	 * Set the value of [tipo_solicitud] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setTipoSolicitud($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->tipo_solicitud !== $v) {
			$this->tipo_solicitud = $v;
			$this->modifiedColumns[] = NotificacionesPeer::TIPO_SOLICITUD;
		}

		return $this;
	} // setTipoSolicitud()

	/**
	 * Set the value of [ac_mod_responsable] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setAcModResponsable($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ac_mod_responsable !== $v) {
			$this->ac_mod_responsable = $v;
			$this->modifiedColumns[] = NotificacionesPeer::AC_MOD_RESPONSABLE;
		}

		return $this;
	} // setAcModResponsable()

	/**
	 * Set the value of [ac_mod_cif_nif_ant] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setAcModCifNifAnt($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->ac_mod_cif_nif_ant !== $v) {
			$this->ac_mod_cif_nif_ant = $v;
			$this->modifiedColumns[] = NotificacionesPeer::AC_MOD_CIF_NIF_ANT;
		}

		return $this;
	} // setAcModCifNifAnt()

	/**
	 * Set the value of [ac_mod_servicio_unidad] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setAcModServicioUnidad($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ac_mod_servicio_unidad !== $v) {
			$this->ac_mod_servicio_unidad = $v;
			$this->modifiedColumns[] = NotificacionesPeer::AC_MOD_SERVICIO_UNIDAD;
		}

		return $this;
	} // setAcModServicioUnidad()

	/**
	 * Set the value of [ac_mod_disposicion] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setAcModDisposicion($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ac_mod_disposicion !== $v) {
			$this->ac_mod_disposicion = $v;
			$this->modifiedColumns[] = NotificacionesPeer::AC_MOD_DISPOSICION;
		}

		return $this;
	} // setAcModDisposicion()

	/**
	 * Set the value of [ac_mod_iden_finalid] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setAcModIdenFinalid($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ac_mod_iden_finalid !== $v) {
			$this->ac_mod_iden_finalid = $v;
			$this->modifiedColumns[] = NotificacionesPeer::AC_MOD_IDEN_FINALID;
		}

		return $this;
	} // setAcModIdenFinalid()

	/**
	 * Set the value of [ac_mod_encargado] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setAcModEncargado($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ac_mod_encargado !== $v) {
			$this->ac_mod_encargado = $v;
			$this->modifiedColumns[] = NotificacionesPeer::AC_MOD_ENCARGADO;
		}

		return $this;
	} // setAcModEncargado()

	/**
	 * Set the value of [ac_mod_estruct_sistema] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setAcModEstructSistema($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ac_mod_estruct_sistema !== $v) {
			$this->ac_mod_estruct_sistema = $v;
			$this->modifiedColumns[] = NotificacionesPeer::AC_MOD_ESTRUCT_SISTEMA;
		}

		return $this;
	} // setAcModEstructSistema()

	/**
	 * Set the value of [ac_mod_medidas_seg] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setAcModMedidasSeg($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ac_mod_medidas_seg !== $v) {
			$this->ac_mod_medidas_seg = $v;
			$this->modifiedColumns[] = NotificacionesPeer::AC_MOD_MEDIDAS_SEG;
		}

		return $this;
	} // setAcModMedidasSeg()

	/**
	 * Set the value of [ac_mod_origen] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setAcModOrigen($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ac_mod_origen !== $v) {
			$this->ac_mod_origen = $v;
			$this->modifiedColumns[] = NotificacionesPeer::AC_MOD_ORIGEN;
		}

		return $this;
	} // setAcModOrigen()

	/**
	 * Set the value of [ac_mod_trans_inter] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setAcModTransInter($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ac_mod_trans_inter !== $v) {
			$this->ac_mod_trans_inter = $v;
			$this->modifiedColumns[] = NotificacionesPeer::AC_MOD_TRANS_INTER;
		}

		return $this;
	} // setAcModTransInter()

	/**
	 * Set the value of [ac_mod_comunic_ces] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setAcModComunicCes($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ac_mod_comunic_ces !== $v) {
			$this->ac_mod_comunic_ces = $v;
			$this->modifiedColumns[] = NotificacionesPeer::AC_MOD_COMUNIC_CES;
		}

		return $this;
	} // setAcModComunicCes()

	/**
	 * Set the value of [ac_supr_motivos] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setAcSuprMotivos($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->ac_supr_motivos !== $v) {
			$this->ac_supr_motivos = $v;
			$this->modifiedColumns[] = NotificacionesPeer::AC_SUPR_MOTIVOS;
		}

		return $this;
	} // setAcSuprMotivos()

	/**
	 * Set the value of [ac_supr_destino_previsiones] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setAcSuprDestinoPrevisiones($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->ac_supr_destino_previsiones !== $v) {
			$this->ac_supr_destino_previsiones = $v;
			$this->modifiedColumns[] = NotificacionesPeer::AC_SUPR_DESTINO_PREVISIONES;
		}

		return $this;
	} // setAcSuprDestinoPrevisiones()

	/**
	 * Set the value of [ac_supr_cifnif] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setAcSuprCifnif($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->ac_supr_cifnif !== $v) {
			$this->ac_supr_cifnif = $v;
			$this->modifiedColumns[] = NotificacionesPeer::AC_SUPR_CIFNIF;
		}

		return $this;
	} // setAcSuprCifnif()

	/**
	 * Set the value of [et_nombre] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setEtNombre($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->et_nombre !== $v) {
			$this->et_nombre = $v;
			$this->modifiedColumns[] = NotificacionesPeer::ET_NOMBRE;
		}

		return $this;
	} // setEtNombre()

	/**
	 * Set the value of [et_cif] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setEtCif($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->et_cif !== $v) {
			$this->et_cif = $v;
			$this->modifiedColumns[] = NotificacionesPeer::ET_CIF;
		}

		return $this;
	} // setEtCif()

	/**
	 * Set the value of [et_dirpostal] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setEtDirpostal($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->et_dirpostal !== $v) {
			$this->et_dirpostal = $v;
			$this->modifiedColumns[] = NotificacionesPeer::ET_DIRPOSTAL;
		}

		return $this;
	} // setEtDirpostal()

	/**
	 * Set the value of [et_localidad] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setEtLocalidad($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->et_localidad !== $v) {
			$this->et_localidad = $v;
			$this->modifiedColumns[] = NotificacionesPeer::ET_LOCALIDAD;
		}

		return $this;
	} // setEtLocalidad()

	/**
	 * Set the value of [et_cp] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setEtCp($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->et_cp !== $v) {
			$this->et_cp = $v;
			$this->modifiedColumns[] = NotificacionesPeer::ET_CP;
		}

		return $this;
	} // setEtCp()

	/**
	 * Set the value of [et_provincia] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setEtProvincia($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->et_provincia !== $v) {
			$this->et_provincia = $v;
			$this->modifiedColumns[] = NotificacionesPeer::ET_PROVINCIA;
		}

		return $this;
	} // setEtProvincia()

	/**
	 * Set the value of [et_pais] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setEtPais($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->et_pais !== $v) {
			$this->et_pais = $v;
			$this->modifiedColumns[] = NotificacionesPeer::ET_PAIS;
		}

		return $this;
	} // setEtPais()

	/**
	 * Set the value of [et_tel] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setEtTel($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->et_tel !== $v) {
			$this->et_tel = $v;
			$this->modifiedColumns[] = NotificacionesPeer::ET_TEL;
		}

		return $this;
	} // setEtTel()

	/**
	 * Set the value of [et_fax] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setEtFax($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->et_fax !== $v) {
			$this->et_fax = $v;
			$this->modifiedColumns[] = NotificacionesPeer::ET_FAX;
		}

		return $this;
	} // setEtFax()

	/**
	 * Set the value of [et_mail] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setEtMail($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->et_mail !== $v) {
			$this->et_mail = $v;
			$this->modifiedColumns[] = NotificacionesPeer::ET_MAIL;
		}

		return $this;
	} // setEtMail()

	/**
	 * Set the value of [idn_nombre] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setIdnNombre($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->idn_nombre !== $v) {
			$this->idn_nombre = $v;
			$this->modifiedColumns[] = NotificacionesPeer::IDN_NOMBRE;
		}

		return $this;
	} // setIdnNombre()

	/**
	 * Set the value of [idn_descripcion] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setIdnDescripcion($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->idn_descripcion !== $v) {
			$this->idn_descripcion = $v;
			$this->modifiedColumns[] = NotificacionesPeer::IDN_DESCRIPCION;
		}

		return $this;
	} // setIdnDescripcion()

	/**
	 * Set the value of [idn_finalidades] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setIdnFinalidades($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->idn_finalidades !== $v) {
			$this->idn_finalidades = $v;
			$this->modifiedColumns[] = NotificacionesPeer::IDN_FINALIDADES;
		}

		return $this;
	} // setIdnFinalidades()

	/**
	 * Set the value of [indica_inte] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setIndicaInte($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->indica_inte !== $v) {
			$this->indica_inte = $v;
			$this->modifiedColumns[] = NotificacionesPeer::INDICA_INTE;
		}

		return $this;
	} // setIndicaInte()

	/**
	 * Set the value of [indica_otras] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setIndicaOtras($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->indica_otras !== $v) {
			$this->indica_otras = $v;
			$this->modifiedColumns[] = NotificacionesPeer::INDICA_OTRAS;
		}

		return $this;
	} // setIndicaOtras()

	/**
	 * Set the value of [indic_fap] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setIndicFap($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->indic_fap !== $v) {
			$this->indic_fap = $v;
			$this->modifiedColumns[] = NotificacionesPeer::INDIC_FAP;
		}

		return $this;
	} // setIndicFap()

	/**
	 * Set the value of [indic_rp] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setIndicRp($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->indic_rp !== $v) {
			$this->indic_rp = $v;
			$this->modifiedColumns[] = NotificacionesPeer::INDIC_RP;
		}

		return $this;
	} // setIndicRp()

	/**
	 * Set the value of [indic_ep] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setIndicEp($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->indic_ep !== $v) {
			$this->indic_ep = $v;
			$this->modifiedColumns[] = NotificacionesPeer::INDIC_EP;
		}

		return $this;
	} // setIndicEp()

	/**
	 * Set the value of [indic_ap] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setIndicAp($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->indic_ap !== $v) {
			$this->indic_ap = $v;
			$this->modifiedColumns[] = NotificacionesPeer::INDIC_AP;
		}

		return $this;
	} // setIndicAp()

	/**
	 * Set the value of [op_colectivos] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setOpColectivos($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->op_colectivos !== $v) {
			$this->op_colectivos = $v;
			$this->modifiedColumns[] = NotificacionesPeer::OP_COLECTIVOS;
		}

		return $this;
	} // setOpColectivos()

	/**
	 * Set the value of [op_otroscol] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setOpOtroscol($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->op_otroscol !== $v) {
			$this->op_otroscol = $v;
			$this->modifiedColumns[] = NotificacionesPeer::OP_OTROSCOL;
		}

		return $this;
	} // setOpOtroscol()

	/**
	 * Set the value of [ind_ide] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setIndIde($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ind_ide !== $v) {
			$this->ind_ide = $v;
			$this->modifiedColumns[] = NotificacionesPeer::IND_IDE;
		}

		return $this;
	} // setIndIde()

	/**
	 * Set the value of [ind_as] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setIndAs($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ind_as !== $v) {
			$this->ind_as = $v;
			$this->modifiedColumns[] = NotificacionesPeer::IND_AS;
		}

		return $this;
	} // setIndAs()

	/**
	 * Set the value of [ind_r] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setIndR($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ind_r !== $v) {
			$this->ind_r = $v;
			$this->modifiedColumns[] = NotificacionesPeer::IND_R;
		}

		return $this;
	} // setIndR()

	/**
	 * Set the value of [ind_c] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setIndC($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ind_c !== $v) {
			$this->ind_c = $v;
			$this->modifiedColumns[] = NotificacionesPeer::IND_C;
		}

		return $this;
	} // setIndC()

	/**
	 * Set the value of [ind_re] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setIndRe($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ind_re !== $v) {
			$this->ind_re = $v;
			$this->modifiedColumns[] = NotificacionesPeer::IND_RE;
		}

		return $this;
	} // setIndRe()

	/**
	 * Set the value of [ind_sal] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setIndSal($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ind_sal !== $v) {
			$this->ind_sal = $v;
			$this->modifiedColumns[] = NotificacionesPeer::IND_SAL;
		}

		return $this;
	} // setIndSal()

	/**
	 * Set the value of [ind_sexo] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setIndSexo($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ind_sexo !== $v) {
			$this->ind_sexo = $v;
			$this->modifiedColumns[] = NotificacionesPeer::IND_SEXO;
		}

		return $this;
	} // setIndSexo()

	/**
	 * Set the value of [ind_nif] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setIndNif($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ind_nif !== $v) {
			$this->ind_nif = $v;
			$this->modifiedColumns[] = NotificacionesPeer::IND_NIF;
		}

		return $this;
	} // setIndNif()

	/**
	 * Set the value of [ind_ss] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setIndSs($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ind_ss !== $v) {
			$this->ind_ss = $v;
			$this->modifiedColumns[] = NotificacionesPeer::IND_SS;
		}

		return $this;
	} // setIndSs()

	/**
	 * Set the value of [ind_n_a] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setIndNA($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ind_n_a !== $v) {
			$this->ind_n_a = $v;
			$this->modifiedColumns[] = NotificacionesPeer::IND_N_A;
		}

		return $this;
	} // setIndNA()

	/**
	 * Set the value of [ind_ts] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setIndTs($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ind_ts !== $v) {
			$this->ind_ts = $v;
			$this->modifiedColumns[] = NotificacionesPeer::IND_TS;
		}

		return $this;
	} // setIndTs()

	/**
	 * Set the value of [ind_dir] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setIndDir($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ind_dir !== $v) {
			$this->ind_dir = $v;
			$this->modifiedColumns[] = NotificacionesPeer::IND_DIR;
		}

		return $this;
	} // setIndDir()

	/**
	 * Set the value of [ind_tel] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setIndTel($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ind_tel !== $v) {
			$this->ind_tel = $v;
			$this->modifiedColumns[] = NotificacionesPeer::IND_TEL;
		}

		return $this;
	} // setIndTel()

	/**
	 * Set the value of [ind_huella] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setIndHuella($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ind_huella !== $v) {
			$this->ind_huella = $v;
			$this->modifiedColumns[] = NotificacionesPeer::IND_HUELLA;
		}

		return $this;
	} // setIndHuella()

	/**
	 * Set the value of [ind_img] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setIndImg($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ind_img !== $v) {
			$this->ind_img = $v;
			$this->modifiedColumns[] = NotificacionesPeer::IND_IMG;
		}

		return $this;
	} // setIndImg()

	/**
	 * Set the value of [ind_marcas] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setIndMarcas($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ind_marcas !== $v) {
			$this->ind_marcas = $v;
			$this->modifiedColumns[] = NotificacionesPeer::IND_MARCAS;
		}

		return $this;
	} // setIndMarcas()

	/**
	 * Set the value of [ind_firma] column.
	 * 
	 * @param      int $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setIndFirma($v)
	{
		if ($v !== null) {
			$v = (int) $v;
		}

		if ($this->ind_firma !== $v) {
			$this->ind_firma = $v;
			$this->modifiedColumns[] = NotificacionesPeer::IND_FIRMA;
		}

		return $this;
	} // setIndFirma()

	/**
	 * Set the value of [td_otrosprotegidos] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setTdOtrosprotegidos($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->td_otrosprotegidos !== $v) {
			$this->td_otrosprotegidos = $v;
			$this->modifiedColumns[] = NotificacionesPeer::TD_OTROSPROTEGIDOS;
		}

		return $this;
	} // setTdOtrosprotegidos()

	/**
	 * Set the value of [td_otrostipificados] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setTdOtrostipificados($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->td_otrostipificados !== $v) {
			$this->td_otrostipificados = $v;
			$this->modifiedColumns[] = NotificacionesPeer::TD_OTROSTIPIFICADOS;
		}

		return $this;
	} // setTdOtrostipificados()

	/**
	 * Set the value of [td_otrostiposdatos] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setTdOtrostiposdatos($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->td_otrostiposdatos !== $v) {
			$this->td_otrostiposdatos = $v;
			$this->modifiedColumns[] = NotificacionesPeer::TD_OTROSTIPOSDATOS;
		}

		return $this;
	} // setTdOtrostiposdatos()

	/**
	 * Set the value of [td_tratamiento] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setTdTratamiento($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->td_tratamiento !== $v) {
			$this->td_tratamiento = $v;
			$this->modifiedColumns[] = NotificacionesPeer::TD_TRATAMIENTO;
		}

		return $this;
	} // setTdTratamiento()

	/**
	 * Set the value of [seguridad] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setSeguridad($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->seguridad !== $v) {
			$this->seguridad = $v;
			$this->modifiedColumns[] = NotificacionesPeer::SEGURIDAD;
		}

		return $this;
	} // setSeguridad()

	/**
	 * Set the value of [cd_destinatarios] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setCdDestinatarios($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cd_destinatarios !== $v) {
			$this->cd_destinatarios = $v;
			$this->modifiedColumns[] = NotificacionesPeer::CD_DESTINATARIOS;
		}

		return $this;
	} // setCdDestinatarios()

	/**
	 * Set the value of [cd_otrosdestinatarios] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setCdOtrosdestinatarios($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cd_otrosdestinatarios !== $v) {
			$this->cd_otrosdestinatarios = $v;
			$this->modifiedColumns[] = NotificacionesPeer::CD_OTROSDESTINATARIOS;
		}

		return $this;
	} // setCdOtrosdestinatarios()

	/**
	 * Set the value of [paises_destina] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setPaisesDestina($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->paises_destina !== $v) {
			$this->paises_destina = $v;
			$this->modifiedColumns[] = NotificacionesPeer::PAISES_DESTINA;
		}

		return $this;
	} // setPaisesDestina()

	/**
	 * Set the value of [cat_destina] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setCatDestina($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->cat_destina !== $v) {
			$this->cat_destina = $v;
			$this->modifiedColumns[] = NotificacionesPeer::CAT_DESTINA;
		}

		return $this;
	} // setCatDestina()

	/**
	 * Set the value of [otro_pais_destina] column.
	 * 
	 * @param      string $v new value
	 * @return     Notificaciones The current object (for fluent API support)
	 */
	public function setOtroPaisDestina($v)
	{
		if ($v !== null) {
			$v = (string) $v;
		}

		if ($this->otro_pais_destina !== $v) {
			$this->otro_pais_destina = $v;
			$this->modifiedColumns[] = NotificacionesPeer::OTRO_PAIS_DESTINA;
		}

		return $this;
	} // setOtroPaisDestina()

	/**
	 * Indicates whether the columns in this object are only set to default values.
	 *
	 * This method can be used in conjunction with isModified() to indicate whether an object is both
	 * modified _and_ has some values set which are non-default.
	 *
	 * @return     boolean Whether the columns in this object are only been set with default values.
	 */
	public function hasOnlyDefaultValues()
	{
			// First, ensure that we don't have any columns that have been modified which aren't default columns.
			if (array_diff($this->modifiedColumns, array(NotificacionesPeer::PROCESADO,NotificacionesPeer::HAY_QUE_PARAR))) {
				return false;
			}

			if ($this->procesado !== 0) {
				return false;
			}

			if ($this->hay_que_parar !== 0) {
				return false;
			}

		// otherwise, everything was equal, so return TRUE
		return true;
	} // hasOnlyDefaultValues()

	/**
	 * Hydrates (populates) the object variables with values from the database resultset.
	 *
	 * An offset (0-based "start column") is specified so that objects can be hydrated
	 * with a subset of the columns in the resultset rows.  This is needed, for example,
	 * for results of JOIN queries where the resultset row includes columns from two or
	 * more tables.
	 *
	 * @param      array $row The row returned by PDOStatement->fetch(PDO::FETCH_NUM)
	 * @param      int $startcol 0-based offset column which indicates which restultset column to start with.
	 * @param      boolean $rehydrate Whether this object is being re-hydrated from the database.
	 * @return     int next starting column
	 * @throws     PropelException  - Any caught Exception will be rewrapped as a PropelException.
	 */
	public function hydrate($row, $startcol = 0, $rehydrate = false)
	{
		try {

			$this->notid = ($row[$startcol + 0] !== null) ? (int) $row[$startcol + 0] : null;
			$this->soporte = ($row[$startcol + 1] !== null) ? (string) $row[$startcol + 1] : null;
			$this->tipo = ($row[$startcol + 2] !== null) ? (string) $row[$startcol + 2] : null;
			$this->tipo_noti = ($row[$startcol + 3] !== null) ? (int) $row[$startcol + 3] : null;
			$this->id_fichero = ($row[$startcol + 4] !== null) ? (int) $row[$startcol + 4] : null;
			$this->fecha = ($row[$startcol + 5] !== null) ? (string) $row[$startcol + 5] : null;
			$this->hora_proceso = ($row[$startcol + 6] !== null) ? (string) $row[$startcol + 6] : null;
			$this->procesado = ($row[$startcol + 7] !== null) ? (int) $row[$startcol + 7] : null;
			$this->hay_que_parar = ($row[$startcol + 8] !== null) ? (int) $row[$startcol + 8] : null;
			$this->modelo = ($row[$startcol + 9] !== null) ? (string) $row[$startcol + 9] : null;
			$this->titularidad = ($row[$startcol + 10] !== null) ? (string) $row[$startcol + 10] : null;
			$this->presentacion = ($row[$startcol + 11] !== null) ? (string) $row[$startcol + 11] : null;
			$this->forma = ($row[$startcol + 12] !== null) ? (string) $row[$startcol + 12] : null;
			$this->id_upload = ($row[$startcol + 13] !== null) ? (string) $row[$startcol + 13] : null;
			$this->pf_razon_s = ($row[$startcol + 14] !== null) ? (string) $row[$startcol + 14] : null;
			$this->pf_cif_nif = ($row[$startcol + 15] !== null) ? (string) $row[$startcol + 15] : null;
			$this->pf_nombre = ($row[$startcol + 16] !== null) ? (string) $row[$startcol + 16] : null;
			$this->pf_apellido1 = ($row[$startcol + 17] !== null) ? (string) $row[$startcol + 17] : null;
			$this->pf_apellido2 = ($row[$startcol + 18] !== null) ? (string) $row[$startcol + 18] : null;
			$this->pf_nif = ($row[$startcol + 19] !== null) ? (string) $row[$startcol + 19] : null;
			$this->pf_cargo = ($row[$startcol + 20] !== null) ? (string) $row[$startcol + 20] : null;
			$this->dec_razon_s = ($row[$startcol + 21] !== null) ? (string) $row[$startcol + 21] : null;
			$this->dec_direccion = ($row[$startcol + 22] !== null) ? (string) $row[$startcol + 22] : null;
			$this->dec_localidad = ($row[$startcol + 23] !== null) ? (string) $row[$startcol + 23] : null;
			$this->dec_cp = ($row[$startcol + 24] !== null) ? (string) $row[$startcol + 24] : null;
			$this->dec_provincia = ($row[$startcol + 25] !== null) ? (string) $row[$startcol + 25] : null;
			$this->dec_pais = ($row[$startcol + 26] !== null) ? (string) $row[$startcol + 26] : null;
			$this->dec_tel = ($row[$startcol + 27] !== null) ? (string) $row[$startcol + 27] : null;
			$this->dec_fax = ($row[$startcol + 28] !== null) ? (string) $row[$startcol + 28] : null;
			$this->dec_mail = ($row[$startcol + 29] !== null) ? (string) $row[$startcol + 29] : null;
			$this->dec_forma = ($row[$startcol + 30] !== null) ? (int) $row[$startcol + 30] : null;
			$this->rf_nombre = ($row[$startcol + 31] !== null) ? (string) $row[$startcol + 31] : null;
			$this->rf_actividad = ($row[$startcol + 32] !== null) ? (string) $row[$startcol + 32] : null;
			$this->rf_cif = ($row[$startcol + 33] !== null) ? (string) $row[$startcol + 33] : null;
			$this->rf_domicilio = ($row[$startcol + 34] !== null) ? (string) $row[$startcol + 34] : null;
			$this->rf_localidad = ($row[$startcol + 35] !== null) ? (string) $row[$startcol + 35] : null;
			$this->rf_cp = ($row[$startcol + 36] !== null) ? (string) $row[$startcol + 36] : null;
			$this->rf_provincia = ($row[$startcol + 37] !== null) ? (string) $row[$startcol + 37] : null;
			$this->rf_pais = ($row[$startcol + 38] !== null) ? (string) $row[$startcol + 38] : null;
			$this->rf_tel = ($row[$startcol + 39] !== null) ? (string) $row[$startcol + 39] : null;
			$this->rf_fax = ($row[$startcol + 40] !== null) ? (string) $row[$startcol + 40] : null;
			$this->rf_mail = ($row[$startcol + 41] !== null) ? (string) $row[$startcol + 41] : null;
			$this->dr_nombreof = ($row[$startcol + 42] !== null) ? (string) $row[$startcol + 42] : null;
			$this->dr_cif = ($row[$startcol + 43] !== null) ? (string) $row[$startcol + 43] : null;
			$this->dr_dirpostal = ($row[$startcol + 44] !== null) ? (string) $row[$startcol + 44] : null;
			$this->dr_localidad = ($row[$startcol + 45] !== null) ? (string) $row[$startcol + 45] : null;
			$this->dr_cp = ($row[$startcol + 46] !== null) ? (string) $row[$startcol + 46] : null;
			$this->dr_provincia = ($row[$startcol + 47] !== null) ? (string) $row[$startcol + 47] : null;
			$this->dr_pais = ($row[$startcol + 48] !== null) ? (string) $row[$startcol + 48] : null;
			$this->dr_tel = ($row[$startcol + 49] !== null) ? (string) $row[$startcol + 49] : null;
			$this->dr_fax = ($row[$startcol + 50] !== null) ? (string) $row[$startcol + 50] : null;
			$this->dr_mail = ($row[$startcol + 51] !== null) ? (string) $row[$startcol + 51] : null;
			$this->tipo_solicitud = ($row[$startcol + 52] !== null) ? (int) $row[$startcol + 52] : null;
			$this->ac_mod_responsable = ($row[$startcol + 53] !== null) ? (int) $row[$startcol + 53] : null;
			$this->ac_mod_cif_nif_ant = ($row[$startcol + 54] !== null) ? (string) $row[$startcol + 54] : null;
			$this->ac_mod_servicio_unidad = ($row[$startcol + 55] !== null) ? (int) $row[$startcol + 55] : null;
			$this->ac_mod_disposicion = ($row[$startcol + 56] !== null) ? (int) $row[$startcol + 56] : null;
			$this->ac_mod_iden_finalid = ($row[$startcol + 57] !== null) ? (int) $row[$startcol + 57] : null;
			$this->ac_mod_encargado = ($row[$startcol + 58] !== null) ? (int) $row[$startcol + 58] : null;
			$this->ac_mod_estruct_sistema = ($row[$startcol + 59] !== null) ? (int) $row[$startcol + 59] : null;
			$this->ac_mod_medidas_seg = ($row[$startcol + 60] !== null) ? (int) $row[$startcol + 60] : null;
			$this->ac_mod_origen = ($row[$startcol + 61] !== null) ? (int) $row[$startcol + 61] : null;
			$this->ac_mod_trans_inter = ($row[$startcol + 62] !== null) ? (int) $row[$startcol + 62] : null;
			$this->ac_mod_comunic_ces = ($row[$startcol + 63] !== null) ? (int) $row[$startcol + 63] : null;
			$this->ac_supr_motivos = ($row[$startcol + 64] !== null) ? (string) $row[$startcol + 64] : null;
			$this->ac_supr_destino_previsiones = ($row[$startcol + 65] !== null) ? (string) $row[$startcol + 65] : null;
			$this->ac_supr_cifnif = ($row[$startcol + 66] !== null) ? (string) $row[$startcol + 66] : null;
			$this->et_nombre = ($row[$startcol + 67] !== null) ? (string) $row[$startcol + 67] : null;
			$this->et_cif = ($row[$startcol + 68] !== null) ? (string) $row[$startcol + 68] : null;
			$this->et_dirpostal = ($row[$startcol + 69] !== null) ? (string) $row[$startcol + 69] : null;
			$this->et_localidad = ($row[$startcol + 70] !== null) ? (string) $row[$startcol + 70] : null;
			$this->et_cp = ($row[$startcol + 71] !== null) ? (string) $row[$startcol + 71] : null;
			$this->et_provincia = ($row[$startcol + 72] !== null) ? (string) $row[$startcol + 72] : null;
			$this->et_pais = ($row[$startcol + 73] !== null) ? (string) $row[$startcol + 73] : null;
			$this->et_tel = ($row[$startcol + 74] !== null) ? (string) $row[$startcol + 74] : null;
			$this->et_fax = ($row[$startcol + 75] !== null) ? (string) $row[$startcol + 75] : null;
			$this->et_mail = ($row[$startcol + 76] !== null) ? (string) $row[$startcol + 76] : null;
			$this->idn_nombre = ($row[$startcol + 77] !== null) ? (string) $row[$startcol + 77] : null;
			$this->idn_descripcion = ($row[$startcol + 78] !== null) ? (string) $row[$startcol + 78] : null;
			$this->idn_finalidades = ($row[$startcol + 79] !== null) ? (string) $row[$startcol + 79] : null;
			$this->indica_inte = ($row[$startcol + 80] !== null) ? (int) $row[$startcol + 80] : null;
			$this->indica_otras = ($row[$startcol + 81] !== null) ? (int) $row[$startcol + 81] : null;
			$this->indic_fap = ($row[$startcol + 82] !== null) ? (int) $row[$startcol + 82] : null;
			$this->indic_rp = ($row[$startcol + 83] !== null) ? (int) $row[$startcol + 83] : null;
			$this->indic_ep = ($row[$startcol + 84] !== null) ? (int) $row[$startcol + 84] : null;
			$this->indic_ap = ($row[$startcol + 85] !== null) ? (int) $row[$startcol + 85] : null;
			$this->op_colectivos = ($row[$startcol + 86] !== null) ? (string) $row[$startcol + 86] : null;
			$this->op_otroscol = ($row[$startcol + 87] !== null) ? (string) $row[$startcol + 87] : null;
			$this->ind_ide = ($row[$startcol + 88] !== null) ? (int) $row[$startcol + 88] : null;
			$this->ind_as = ($row[$startcol + 89] !== null) ? (int) $row[$startcol + 89] : null;
			$this->ind_r = ($row[$startcol + 90] !== null) ? (int) $row[$startcol + 90] : null;
			$this->ind_c = ($row[$startcol + 91] !== null) ? (int) $row[$startcol + 91] : null;
			$this->ind_re = ($row[$startcol + 92] !== null) ? (int) $row[$startcol + 92] : null;
			$this->ind_sal = ($row[$startcol + 93] !== null) ? (int) $row[$startcol + 93] : null;
			$this->ind_sexo = ($row[$startcol + 94] !== null) ? (int) $row[$startcol + 94] : null;
			$this->ind_nif = ($row[$startcol + 95] !== null) ? (int) $row[$startcol + 95] : null;
			$this->ind_ss = ($row[$startcol + 96] !== null) ? (int) $row[$startcol + 96] : null;
			$this->ind_n_a = ($row[$startcol + 97] !== null) ? (int) $row[$startcol + 97] : null;
			$this->ind_ts = ($row[$startcol + 98] !== null) ? (int) $row[$startcol + 98] : null;
			$this->ind_dir = ($row[$startcol + 99] !== null) ? (int) $row[$startcol + 99] : null;
			$this->ind_tel = ($row[$startcol + 100] !== null) ? (int) $row[$startcol + 100] : null;
			$this->ind_huella = ($row[$startcol + 101] !== null) ? (int) $row[$startcol + 101] : null;
			$this->ind_img = ($row[$startcol + 102] !== null) ? (int) $row[$startcol + 102] : null;
			$this->ind_marcas = ($row[$startcol + 103] !== null) ? (int) $row[$startcol + 103] : null;
			$this->ind_firma = ($row[$startcol + 104] !== null) ? (int) $row[$startcol + 104] : null;
			$this->td_otrosprotegidos = ($row[$startcol + 105] !== null) ? (string) $row[$startcol + 105] : null;
			$this->td_otrostipificados = ($row[$startcol + 106] !== null) ? (string) $row[$startcol + 106] : null;
			$this->td_otrostiposdatos = ($row[$startcol + 107] !== null) ? (string) $row[$startcol + 107] : null;
			$this->td_tratamiento = ($row[$startcol + 108] !== null) ? (string) $row[$startcol + 108] : null;
			$this->seguridad = ($row[$startcol + 109] !== null) ? (string) $row[$startcol + 109] : null;
			$this->cd_destinatarios = ($row[$startcol + 110] !== null) ? (string) $row[$startcol + 110] : null;
			$this->cd_otrosdestinatarios = ($row[$startcol + 111] !== null) ? (string) $row[$startcol + 111] : null;
			$this->paises_destina = ($row[$startcol + 112] !== null) ? (string) $row[$startcol + 112] : null;
			$this->cat_destina = ($row[$startcol + 113] !== null) ? (string) $row[$startcol + 113] : null;
			$this->otro_pais_destina = ($row[$startcol + 114] !== null) ? (string) $row[$startcol + 114] : null;
			$this->resetModified();

			$this->setNew(false);

			if ($rehydrate) {
				$this->ensureConsistency();
			}

			// FIXME - using NUM_COLUMNS may be clearer.
			return $startcol + 115; // 115 = NotificacionesPeer::NUM_COLUMNS - NotificacionesPeer::NUM_LAZY_LOAD_COLUMNS).

		} catch (Exception $e) {
			throw new PropelException("Error populating Notificaciones object", $e);
		}
	}

	/**
	 * Checks and repairs the internal consistency of the object.
	 *
	 * This method is executed after an already-instantiated object is re-hydrated
	 * from the database.  It exists to check any foreign keys to make sure that
	 * the objects related to the current object are correct based on foreign key.
	 *
	 * You can override this method in the stub class, but you should always invoke
	 * the base method from the overridden method (i.e. parent::ensureConsistency()),
	 * in case your model changes.
	 *
	 * @throws     PropelException
	 */
	public function ensureConsistency()
	{

		if ($this->aFormulario !== null && $this->id_fichero !== $this->aFormulario->getIdFormulario()) {
			$this->aFormulario = null;
		}
	} // ensureConsistency

	/**
	 * Reloads this object from datastore based on primary key and (optionally) resets all associated objects.
	 *
	 * This will only work if the object has been saved and has a valid primary key set.
	 *
	 * @param      boolean $deep (optional) Whether to also de-associated any related objects.
	 * @param      PropelPDO $con (optional) The PropelPDO connection to use.
	 * @return     void
	 * @throws     PropelException - if this object is deleted, unsaved or doesn't have pk match in db
	 */
	public function reload($deep = false, PropelPDO $con = null)
	{
		if ($this->isDeleted()) {
			throw new PropelException("Cannot reload a deleted object.");
		}

		if ($this->isNew()) {
			throw new PropelException("Cannot reload an unsaved object.");
		}

		if ($con === null) {
			$con = Propel::getConnection(NotificacionesPeer::DATABASE_NAME, Propel::CONNECTION_READ);
		}

		// We don't need to alter the object instance pool; we're just modifying this instance
		// already in the pool.

		$stmt = NotificacionesPeer::doSelectStmt($this->buildPkeyCriteria(), $con);
		$row = $stmt->fetch(PDO::FETCH_NUM);
		$stmt->closeCursor();
		if (!$row) {
			throw new PropelException('Cannot find matching row in the database to reload object values.');
		}
		$this->hydrate($row, 0, true); // rehydrate

		if ($deep) {  // also de-associate any related objects?

			$this->aFormulario = null;
		} // if (deep)
	}

	/**
	 * Removes this object from datastore and sets delete attribute.
	 *
	 * @param      PropelPDO $con
	 * @return     void
	 * @throws     PropelException
	 * @see        BaseObject::setDeleted()
	 * @see        BaseObject::isDeleted()
	 */
	public function delete(PropelPDO $con = null)
	{

    foreach (sfMixer::getCallables('BaseNotificaciones:delete:pre') as $callable)
    {
      $ret = call_user_func($callable, $this, $con);
      if ($ret)
      {
        return;
      }
    }


		if ($this->isDeleted()) {
			throw new PropelException("This object has already been deleted.");
		}

		if ($con === null) {
			$con = Propel::getConnection(NotificacionesPeer::DATABASE_NAME, Propel::CONNECTION_WRITE);
		}
		
		$con->beginTransaction();
		try {
			NotificacionesPeer::doDelete($this, $con);
			$this->setDeleted(true);
			$con->commit();
		} catch (PropelException $e) {
			$con->rollBack();
			throw $e;
		}
	

    foreach (sfMixer::getCallables('BaseNotificaciones:delete:post') as $callable)
    {
      call_user_func($callable, $this, $con);
    }

  }
	/**
	 * Persists this object to the database.
	 *
	 * If the object is new, it inserts it; otherwise an update is performed.
	 * All modified related objects will also be persisted in the doSave()
	 * method.  This method wraps all precipitate database operations in a
	 * single transaction.
	 *
	 * @param      PropelPDO $con
	 * @return     int The number of rows affected by this insert/update and any referring fk objects' save() operations.
	 * @throws     PropelException
	 * @see        doSave()
	 */
	public function save(PropelPDO $con = null)
	{

    foreach (sfMixer::getCallables('BaseNotificaciones:save:pre') as $callable)
    {
      $affectedRows = call_user_func($callable, $this, $con);
      if (is_int($affectedRows))
      {
        return $affectedRows;
      }
    }


		if ($this->isDeleted()) {
			throw new PropelException("You cannot save an object that has been deleted.");
		}

		if ($con === null) {
			$con = Propel::getConnection(NotificacionesPeer::DATABASE_NAME, Propel::CONNECTION_WRITE);
		}
		
		$con->beginTransaction();
		try {
			$affectedRows = $this->doSave($con);
			$con->commit();
    foreach (sfMixer::getCallables('BaseNotificaciones:save:post') as $callable)
    {
      call_user_func($callable, $this, $con, $affectedRows);
    }

			NotificacionesPeer::addInstanceToPool($this);
			return $affectedRows;
		} catch (PropelException $e) {
			$con->rollBack();
			throw $e;
		}
	}

	/**
	 * Performs the work of inserting or updating the row in the database.
	 *
	 * If the object is new, it inserts it; otherwise an update is performed.
	 * All related objects are also updated in this method.
	 *
	 * @param      PropelPDO $con
	 * @return     int The number of rows affected by this insert/update and any referring fk objects' save() operations.
	 * @throws     PropelException
	 * @see        save()
	 */
	protected function doSave(PropelPDO $con)
	{
		$affectedRows = 0; // initialize var to track total num of affected rows
		if (!$this->alreadyInSave) {
			$this->alreadyInSave = true;

			// We call the save method on the following object(s) if they
			// were passed to this object by their coresponding set
			// method.  This object relates to these object(s) by a
			// foreign key reference.

			if ($this->aFormulario !== null) {
				if ($this->aFormulario->isModified() || $this->aFormulario->isNew()) {
					$affectedRows += $this->aFormulario->save($con);
				}
				$this->setFormulario($this->aFormulario);
			}

			if ($this->isNew() ) {
				$this->modifiedColumns[] = NotificacionesPeer::NOTID;
			}

			// If this object has been modified, then save it to the database.
			if ($this->isModified()) {
				if ($this->isNew()) {
					$pk = NotificacionesPeer::doInsert($this, $con);
					$affectedRows += 1; // we are assuming that there is only 1 row per doInsert() which
										 // should always be true here (even though technically
										 // BasePeer::doInsert() can insert multiple rows).

					$this->setNotid($pk);  //[IMV] update autoincrement primary key

					$this->setNew(false);
				} else {
					$affectedRows += NotificacionesPeer::doUpdate($this, $con);
				}

				$this->resetModified(); // [HL] After being saved an object is no longer 'modified'
			}

			$this->alreadyInSave = false;

		}
		return $affectedRows;
	} // doSave()

	/**
	 * Array of ValidationFailed objects.
	 * @var        array ValidationFailed[]
	 */
	protected $validationFailures = array();

	/**
	 * Gets any ValidationFailed objects that resulted from last call to validate().
	 *
	 *
	 * @return     array ValidationFailed[]
	 * @see        validate()
	 */
	public function getValidationFailures()
	{
		return $this->validationFailures;
	}

	/**
	 * Validates the objects modified field values and all objects related to this table.
	 *
	 * If $columns is either a column name or an array of column names
	 * only those columns are validated.
	 *
	 * @param      mixed $columns Column name or an array of column names.
	 * @return     boolean Whether all columns pass validation.
	 * @see        doValidate()
	 * @see        getValidationFailures()
	 */
	public function validate($columns = null)
	{
		$res = $this->doValidate($columns);
		if ($res === true) {
			$this->validationFailures = array();
			return true;
		} else {
			$this->validationFailures = $res;
			return false;
		}
	}

	/**
	 * This function performs the validation work for complex object models.
	 *
	 * In addition to checking the current object, all related objects will
	 * also be validated.  If all pass then <code>true</code> is returned; otherwise
	 * an aggreagated array of ValidationFailed objects will be returned.
	 *
	 * @param      array $columns Array of column names to validate.
	 * @return     mixed <code>true</code> if all validations pass; array of <code>ValidationFailed</code> objets otherwise.
	 */
	protected function doValidate($columns = null)
	{
		if (!$this->alreadyInValidation) {
			$this->alreadyInValidation = true;
			$retval = null;

			$failureMap = array();


			// We call the validate method on the following object(s) if they
			// were passed to this object by their coresponding set
			// method.  This object relates to these object(s) by a
			// foreign key reference.

			if ($this->aFormulario !== null) {
				if (!$this->aFormulario->validate($columns)) {
					$failureMap = array_merge($failureMap, $this->aFormulario->getValidationFailures());
				}
			}


			if (($retval = NotificacionesPeer::doValidate($this, $columns)) !== true) {
				$failureMap = array_merge($failureMap, $retval);
			}



			$this->alreadyInValidation = false;
		}

		return (!empty($failureMap) ? $failureMap : true);
	}

	/**
	 * Retrieves a field from the object by name passed in as a string.
	 *
	 * @param      string $name name
	 * @param      string $type The type of fieldname the $name is of:
	 *                     one of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                     BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM
	 * @return     mixed Value of field.
	 */
	public function getByName($name, $type = BasePeer::TYPE_PHPNAME)
	{
		$pos = NotificacionesPeer::translateFieldName($name, $type, BasePeer::TYPE_NUM);
		$field = $this->getByPosition($pos);
		return $field;
	}

	/**
	 * Retrieves a field from the object by Position as specified in the xml schema.
	 * Zero-based.
	 *
	 * @param      int $pos position in xml schema
	 * @return     mixed Value of field at $pos
	 */
	public function getByPosition($pos)
	{
		switch($pos) {
			case 0:
				return $this->getNotid();
				break;
			case 1:
				return $this->getSoporte();
				break;
			case 2:
				return $this->getTipo();
				break;
			case 3:
				return $this->getTipoNoti();
				break;
			case 4:
				return $this->getIdFichero();
				break;
			case 5:
				return $this->getFecha();
				break;
			case 6:
				return $this->getHoraProceso();
				break;
			case 7:
				return $this->getProcesado();
				break;
			case 8:
				return $this->getHayQueParar();
				break;
			case 9:
				return $this->getModelo();
				break;
			case 10:
				return $this->getTitularidad();
				break;
			case 11:
				return $this->getPresentacion();
				break;
			case 12:
				return $this->getForma();
				break;
			case 13:
				return $this->getIdUpload();
				break;
			case 14:
				return $this->getPfRazonS();
				break;
			case 15:
				return $this->getPfCifNif();
				break;
			case 16:
				return $this->getPfNombre();
				break;
			case 17:
				return $this->getPfApellido1();
				break;
			case 18:
				return $this->getPfApellido2();
				break;
			case 19:
				return $this->getPfNif();
				break;
			case 20:
				return $this->getPfCargo();
				break;
			case 21:
				return $this->getDecRazonS();
				break;
			case 22:
				return $this->getDecDireccion();
				break;
			case 23:
				return $this->getDecLocalidad();
				break;
			case 24:
				return $this->getDecCp();
				break;
			case 25:
				return $this->getDecProvincia();
				break;
			case 26:
				return $this->getDecPais();
				break;
			case 27:
				return $this->getDecTel();
				break;
			case 28:
				return $this->getDecFax();
				break;
			case 29:
				return $this->getDecMail();
				break;
			case 30:
				return $this->getDecForma();
				break;
			case 31:
				return $this->getRfNombre();
				break;
			case 32:
				return $this->getRfActividad();
				break;
			case 33:
				return $this->getRfCif();
				break;
			case 34:
				return $this->getRfDomicilio();
				break;
			case 35:
				return $this->getRfLocalidad();
				break;
			case 36:
				return $this->getRfCp();
				break;
			case 37:
				return $this->getRfProvincia();
				break;
			case 38:
				return $this->getRfPais();
				break;
			case 39:
				return $this->getRfTel();
				break;
			case 40:
				return $this->getRfFax();
				break;
			case 41:
				return $this->getRfMail();
				break;
			case 42:
				return $this->getDrNombreof();
				break;
			case 43:
				return $this->getDrCif();
				break;
			case 44:
				return $this->getDrDirpostal();
				break;
			case 45:
				return $this->getDrLocalidad();
				break;
			case 46:
				return $this->getDrCp();
				break;
			case 47:
				return $this->getDrProvincia();
				break;
			case 48:
				return $this->getDrPais();
				break;
			case 49:
				return $this->getDrTel();
				break;
			case 50:
				return $this->getDrFax();
				break;
			case 51:
				return $this->getDrMail();
				break;
			case 52:
				return $this->getTipoSolicitud();
				break;
			case 53:
				return $this->getAcModResponsable();
				break;
			case 54:
				return $this->getAcModCifNifAnt();
				break;
			case 55:
				return $this->getAcModServicioUnidad();
				break;
			case 56:
				return $this->getAcModDisposicion();
				break;
			case 57:
				return $this->getAcModIdenFinalid();
				break;
			case 58:
				return $this->getAcModEncargado();
				break;
			case 59:
				return $this->getAcModEstructSistema();
				break;
			case 60:
				return $this->getAcModMedidasSeg();
				break;
			case 61:
				return $this->getAcModOrigen();
				break;
			case 62:
				return $this->getAcModTransInter();
				break;
			case 63:
				return $this->getAcModComunicCes();
				break;
			case 64:
				return $this->getAcSuprMotivos();
				break;
			case 65:
				return $this->getAcSuprDestinoPrevisiones();
				break;
			case 66:
				return $this->getAcSuprCifnif();
				break;
			case 67:
				return $this->getEtNombre();
				break;
			case 68:
				return $this->getEtCif();
				break;
			case 69:
				return $this->getEtDirpostal();
				break;
			case 70:
				return $this->getEtLocalidad();
				break;
			case 71:
				return $this->getEtCp();
				break;
			case 72:
				return $this->getEtProvincia();
				break;
			case 73:
				return $this->getEtPais();
				break;
			case 74:
				return $this->getEtTel();
				break;
			case 75:
				return $this->getEtFax();
				break;
			case 76:
				return $this->getEtMail();
				break;
			case 77:
				return $this->getIdnNombre();
				break;
			case 78:
				return $this->getIdnDescripcion();
				break;
			case 79:
				return $this->getIdnFinalidades();
				break;
			case 80:
				return $this->getIndicaInte();
				break;
			case 81:
				return $this->getIndicaOtras();
				break;
			case 82:
				return $this->getIndicFap();
				break;
			case 83:
				return $this->getIndicRp();
				break;
			case 84:
				return $this->getIndicEp();
				break;
			case 85:
				return $this->getIndicAp();
				break;
			case 86:
				return $this->getOpColectivos();
				break;
			case 87:
				return $this->getOpOtroscol();
				break;
			case 88:
				return $this->getIndIde();
				break;
			case 89:
				return $this->getIndAs();
				break;
			case 90:
				return $this->getIndR();
				break;
			case 91:
				return $this->getIndC();
				break;
			case 92:
				return $this->getIndRe();
				break;
			case 93:
				return $this->getIndSal();
				break;
			case 94:
				return $this->getIndSexo();
				break;
			case 95:
				return $this->getIndNif();
				break;
			case 96:
				return $this->getIndSs();
				break;
			case 97:
				return $this->getIndNA();
				break;
			case 98:
				return $this->getIndTs();
				break;
			case 99:
				return $this->getIndDir();
				break;
			case 100:
				return $this->getIndTel();
				break;
			case 101:
				return $this->getIndHuella();
				break;
			case 102:
				return $this->getIndImg();
				break;
			case 103:
				return $this->getIndMarcas();
				break;
			case 104:
				return $this->getIndFirma();
				break;
			case 105:
				return $this->getTdOtrosprotegidos();
				break;
			case 106:
				return $this->getTdOtrostipificados();
				break;
			case 107:
				return $this->getTdOtrostiposdatos();
				break;
			case 108:
				return $this->getTdTratamiento();
				break;
			case 109:
				return $this->getSeguridad();
				break;
			case 110:
				return $this->getCdDestinatarios();
				break;
			case 111:
				return $this->getCdOtrosdestinatarios();
				break;
			case 112:
				return $this->getPaisesDestina();
				break;
			case 113:
				return $this->getCatDestina();
				break;
			case 114:
				return $this->getOtroPaisDestina();
				break;
			default:
				return null;
				break;
		} // switch()
	}

	/**
	 * Exports the object as an array.
	 *
	 * You can specify the key type of the array by passing one of the class
	 * type constants.
	 *
	 * @param      string $keyType (optional) One of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                        BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM. Defaults to BasePeer::TYPE_PHPNAME.
	 * @param      boolean $includeLazyLoadColumns (optional) Whether to include lazy loaded columns.  Defaults to TRUE.
	 * @return     an associative array containing the field names (as keys) and field values
	 */
	public function toArray($keyType = BasePeer::TYPE_PHPNAME, $includeLazyLoadColumns = true)
	{
		$keys = NotificacionesPeer::getFieldNames($keyType);
		$result = array(
			$keys[0] => $this->getNotid(),
			$keys[1] => $this->getSoporte(),
			$keys[2] => $this->getTipo(),
			$keys[3] => $this->getTipoNoti(),
			$keys[4] => $this->getIdFichero(),
			$keys[5] => $this->getFecha(),
			$keys[6] => $this->getHoraProceso(),
			$keys[7] => $this->getProcesado(),
			$keys[8] => $this->getHayQueParar(),
			$keys[9] => $this->getModelo(),
			$keys[10] => $this->getTitularidad(),
			$keys[11] => $this->getPresentacion(),
			$keys[12] => $this->getForma(),
			$keys[13] => $this->getIdUpload(),
			$keys[14] => $this->getPfRazonS(),
			$keys[15] => $this->getPfCifNif(),
			$keys[16] => $this->getPfNombre(),
			$keys[17] => $this->getPfApellido1(),
			$keys[18] => $this->getPfApellido2(),
			$keys[19] => $this->getPfNif(),
			$keys[20] => $this->getPfCargo(),
			$keys[21] => $this->getDecRazonS(),
			$keys[22] => $this->getDecDireccion(),
			$keys[23] => $this->getDecLocalidad(),
			$keys[24] => $this->getDecCp(),
			$keys[25] => $this->getDecProvincia(),
			$keys[26] => $this->getDecPais(),
			$keys[27] => $this->getDecTel(),
			$keys[28] => $this->getDecFax(),
			$keys[29] => $this->getDecMail(),
			$keys[30] => $this->getDecForma(),
			$keys[31] => $this->getRfNombre(),
			$keys[32] => $this->getRfActividad(),
			$keys[33] => $this->getRfCif(),
			$keys[34] => $this->getRfDomicilio(),
			$keys[35] => $this->getRfLocalidad(),
			$keys[36] => $this->getRfCp(),
			$keys[37] => $this->getRfProvincia(),
			$keys[38] => $this->getRfPais(),
			$keys[39] => $this->getRfTel(),
			$keys[40] => $this->getRfFax(),
			$keys[41] => $this->getRfMail(),
			$keys[42] => $this->getDrNombreof(),
			$keys[43] => $this->getDrCif(),
			$keys[44] => $this->getDrDirpostal(),
			$keys[45] => $this->getDrLocalidad(),
			$keys[46] => $this->getDrCp(),
			$keys[47] => $this->getDrProvincia(),
			$keys[48] => $this->getDrPais(),
			$keys[49] => $this->getDrTel(),
			$keys[50] => $this->getDrFax(),
			$keys[51] => $this->getDrMail(),
			$keys[52] => $this->getTipoSolicitud(),
			$keys[53] => $this->getAcModResponsable(),
			$keys[54] => $this->getAcModCifNifAnt(),
			$keys[55] => $this->getAcModServicioUnidad(),
			$keys[56] => $this->getAcModDisposicion(),
			$keys[57] => $this->getAcModIdenFinalid(),
			$keys[58] => $this->getAcModEncargado(),
			$keys[59] => $this->getAcModEstructSistema(),
			$keys[60] => $this->getAcModMedidasSeg(),
			$keys[61] => $this->getAcModOrigen(),
			$keys[62] => $this->getAcModTransInter(),
			$keys[63] => $this->getAcModComunicCes(),
			$keys[64] => $this->getAcSuprMotivos(),
			$keys[65] => $this->getAcSuprDestinoPrevisiones(),
			$keys[66] => $this->getAcSuprCifnif(),
			$keys[67] => $this->getEtNombre(),
			$keys[68] => $this->getEtCif(),
			$keys[69] => $this->getEtDirpostal(),
			$keys[70] => $this->getEtLocalidad(),
			$keys[71] => $this->getEtCp(),
			$keys[72] => $this->getEtProvincia(),
			$keys[73] => $this->getEtPais(),
			$keys[74] => $this->getEtTel(),
			$keys[75] => $this->getEtFax(),
			$keys[76] => $this->getEtMail(),
			$keys[77] => $this->getIdnNombre(),
			$keys[78] => $this->getIdnDescripcion(),
			$keys[79] => $this->getIdnFinalidades(),
			$keys[80] => $this->getIndicaInte(),
			$keys[81] => $this->getIndicaOtras(),
			$keys[82] => $this->getIndicFap(),
			$keys[83] => $this->getIndicRp(),
			$keys[84] => $this->getIndicEp(),
			$keys[85] => $this->getIndicAp(),
			$keys[86] => $this->getOpColectivos(),
			$keys[87] => $this->getOpOtroscol(),
			$keys[88] => $this->getIndIde(),
			$keys[89] => $this->getIndAs(),
			$keys[90] => $this->getIndR(),
			$keys[91] => $this->getIndC(),
			$keys[92] => $this->getIndRe(),
			$keys[93] => $this->getIndSal(),
			$keys[94] => $this->getIndSexo(),
			$keys[95] => $this->getIndNif(),
			$keys[96] => $this->getIndSs(),
			$keys[97] => $this->getIndNA(),
			$keys[98] => $this->getIndTs(),
			$keys[99] => $this->getIndDir(),
			$keys[100] => $this->getIndTel(),
			$keys[101] => $this->getIndHuella(),
			$keys[102] => $this->getIndImg(),
			$keys[103] => $this->getIndMarcas(),
			$keys[104] => $this->getIndFirma(),
			$keys[105] => $this->getTdOtrosprotegidos(),
			$keys[106] => $this->getTdOtrostipificados(),
			$keys[107] => $this->getTdOtrostiposdatos(),
			$keys[108] => $this->getTdTratamiento(),
			$keys[109] => $this->getSeguridad(),
			$keys[110] => $this->getCdDestinatarios(),
			$keys[111] => $this->getCdOtrosdestinatarios(),
			$keys[112] => $this->getPaisesDestina(),
			$keys[113] => $this->getCatDestina(),
			$keys[114] => $this->getOtroPaisDestina(),
		);
		return $result;
	}

	/**
	 * Sets a field from the object by name passed in as a string.
	 *
	 * @param      string $name peer name
	 * @param      mixed $value field value
	 * @param      string $type The type of fieldname the $name is of:
	 *                     one of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME
	 *                     BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM
	 * @return     void
	 */
	public function setByName($name, $value, $type = BasePeer::TYPE_PHPNAME)
	{
		$pos = NotificacionesPeer::translateFieldName($name, $type, BasePeer::TYPE_NUM);
		return $this->setByPosition($pos, $value);
	}

	/**
	 * Sets a field from the object by Position as specified in the xml schema.
	 * Zero-based.
	 *
	 * @param      int $pos position in xml schema
	 * @param      mixed $value field value
	 * @return     void
	 */
	public function setByPosition($pos, $value)
	{
		switch($pos) {
			case 0:
				$this->setNotid($value);
				break;
			case 1:
				$this->setSoporte($value);
				break;
			case 2:
				$this->setTipo($value);
				break;
			case 3:
				$this->setTipoNoti($value);
				break;
			case 4:
				$this->setIdFichero($value);
				break;
			case 5:
				$this->setFecha($value);
				break;
			case 6:
				$this->setHoraProceso($value);
				break;
			case 7:
				$this->setProcesado($value);
				break;
			case 8:
				$this->setHayQueParar($value);
				break;
			case 9:
				$this->setModelo($value);
				break;
			case 10:
				$this->setTitularidad($value);
				break;
			case 11:
				$this->setPresentacion($value);
				break;
			case 12:
				$this->setForma($value);
				break;
			case 13:
				$this->setIdUpload($value);
				break;
			case 14:
				$this->setPfRazonS($value);
				break;
			case 15:
				$this->setPfCifNif($value);
				break;
			case 16:
				$this->setPfNombre($value);
				break;
			case 17:
				$this->setPfApellido1($value);
				break;
			case 18:
				$this->setPfApellido2($value);
				break;
			case 19:
				$this->setPfNif($value);
				break;
			case 20:
				$this->setPfCargo($value);
				break;
			case 21:
				$this->setDecRazonS($value);
				break;
			case 22:
				$this->setDecDireccion($value);
				break;
			case 23:
				$this->setDecLocalidad($value);
				break;
			case 24:
				$this->setDecCp($value);
				break;
			case 25:
				$this->setDecProvincia($value);
				break;
			case 26:
				$this->setDecPais($value);
				break;
			case 27:
				$this->setDecTel($value);
				break;
			case 28:
				$this->setDecFax($value);
				break;
			case 29:
				$this->setDecMail($value);
				break;
			case 30:
				$this->setDecForma($value);
				break;
			case 31:
				$this->setRfNombre($value);
				break;
			case 32:
				$this->setRfActividad($value);
				break;
			case 33:
				$this->setRfCif($value);
				break;
			case 34:
				$this->setRfDomicilio($value);
				break;
			case 35:
				$this->setRfLocalidad($value);
				break;
			case 36:
				$this->setRfCp($value);
				break;
			case 37:
				$this->setRfProvincia($value);
				break;
			case 38:
				$this->setRfPais($value);
				break;
			case 39:
				$this->setRfTel($value);
				break;
			case 40:
				$this->setRfFax($value);
				break;
			case 41:
				$this->setRfMail($value);
				break;
			case 42:
				$this->setDrNombreof($value);
				break;
			case 43:
				$this->setDrCif($value);
				break;
			case 44:
				$this->setDrDirpostal($value);
				break;
			case 45:
				$this->setDrLocalidad($value);
				break;
			case 46:
				$this->setDrCp($value);
				break;
			case 47:
				$this->setDrProvincia($value);
				break;
			case 48:
				$this->setDrPais($value);
				break;
			case 49:
				$this->setDrTel($value);
				break;
			case 50:
				$this->setDrFax($value);
				break;
			case 51:
				$this->setDrMail($value);
				break;
			case 52:
				$this->setTipoSolicitud($value);
				break;
			case 53:
				$this->setAcModResponsable($value);
				break;
			case 54:
				$this->setAcModCifNifAnt($value);
				break;
			case 55:
				$this->setAcModServicioUnidad($value);
				break;
			case 56:
				$this->setAcModDisposicion($value);
				break;
			case 57:
				$this->setAcModIdenFinalid($value);
				break;
			case 58:
				$this->setAcModEncargado($value);
				break;
			case 59:
				$this->setAcModEstructSistema($value);
				break;
			case 60:
				$this->setAcModMedidasSeg($value);
				break;
			case 61:
				$this->setAcModOrigen($value);
				break;
			case 62:
				$this->setAcModTransInter($value);
				break;
			case 63:
				$this->setAcModComunicCes($value);
				break;
			case 64:
				$this->setAcSuprMotivos($value);
				break;
			case 65:
				$this->setAcSuprDestinoPrevisiones($value);
				break;
			case 66:
				$this->setAcSuprCifnif($value);
				break;
			case 67:
				$this->setEtNombre($value);
				break;
			case 68:
				$this->setEtCif($value);
				break;
			case 69:
				$this->setEtDirpostal($value);
				break;
			case 70:
				$this->setEtLocalidad($value);
				break;
			case 71:
				$this->setEtCp($value);
				break;
			case 72:
				$this->setEtProvincia($value);
				break;
			case 73:
				$this->setEtPais($value);
				break;
			case 74:
				$this->setEtTel($value);
				break;
			case 75:
				$this->setEtFax($value);
				break;
			case 76:
				$this->setEtMail($value);
				break;
			case 77:
				$this->setIdnNombre($value);
				break;
			case 78:
				$this->setIdnDescripcion($value);
				break;
			case 79:
				$this->setIdnFinalidades($value);
				break;
			case 80:
				$this->setIndicaInte($value);
				break;
			case 81:
				$this->setIndicaOtras($value);
				break;
			case 82:
				$this->setIndicFap($value);
				break;
			case 83:
				$this->setIndicRp($value);
				break;
			case 84:
				$this->setIndicEp($value);
				break;
			case 85:
				$this->setIndicAp($value);
				break;
			case 86:
				$this->setOpColectivos($value);
				break;
			case 87:
				$this->setOpOtroscol($value);
				break;
			case 88:
				$this->setIndIde($value);
				break;
			case 89:
				$this->setIndAs($value);
				break;
			case 90:
				$this->setIndR($value);
				break;
			case 91:
				$this->setIndC($value);
				break;
			case 92:
				$this->setIndRe($value);
				break;
			case 93:
				$this->setIndSal($value);
				break;
			case 94:
				$this->setIndSexo($value);
				break;
			case 95:
				$this->setIndNif($value);
				break;
			case 96:
				$this->setIndSs($value);
				break;
			case 97:
				$this->setIndNA($value);
				break;
			case 98:
				$this->setIndTs($value);
				break;
			case 99:
				$this->setIndDir($value);
				break;
			case 100:
				$this->setIndTel($value);
				break;
			case 101:
				$this->setIndHuella($value);
				break;
			case 102:
				$this->setIndImg($value);
				break;
			case 103:
				$this->setIndMarcas($value);
				break;
			case 104:
				$this->setIndFirma($value);
				break;
			case 105:
				$this->setTdOtrosprotegidos($value);
				break;
			case 106:
				$this->setTdOtrostipificados($value);
				break;
			case 107:
				$this->setTdOtrostiposdatos($value);
				break;
			case 108:
				$this->setTdTratamiento($value);
				break;
			case 109:
				$this->setSeguridad($value);
				break;
			case 110:
				$this->setCdDestinatarios($value);
				break;
			case 111:
				$this->setCdOtrosdestinatarios($value);
				break;
			case 112:
				$this->setPaisesDestina($value);
				break;
			case 113:
				$this->setCatDestina($value);
				break;
			case 114:
				$this->setOtroPaisDestina($value);
				break;
		} // switch()
	}

	/**
	 * Populates the object using an array.
	 *
	 * This is particularly useful when populating an object from one of the
	 * request arrays (e.g. $_POST).  This method goes through the column
	 * names, checking to see whether a matching key exists in populated
	 * array. If so the setByName() method is called for that column.
	 *
	 * You can specify the key type of the array by additionally passing one
	 * of the class type constants BasePeer::TYPE_PHPNAME, BasePeer::TYPE_STUDLYPHPNAME,
	 * BasePeer::TYPE_COLNAME, BasePeer::TYPE_FIELDNAME, BasePeer::TYPE_NUM.
	 * The default key type is the column's phpname (e.g. 'AuthorId')
	 *
	 * @param      array  $arr     An array to populate the object from.
	 * @param      string $keyType The type of keys the array uses.
	 * @return     void
	 */
	public function fromArray($arr, $keyType = BasePeer::TYPE_PHPNAME)
	{
		$keys = NotificacionesPeer::getFieldNames($keyType);

		if (array_key_exists($keys[0], $arr)) $this->setNotid($arr[$keys[0]]);
		if (array_key_exists($keys[1], $arr)) $this->setSoporte($arr[$keys[1]]);
		if (array_key_exists($keys[2], $arr)) $this->setTipo($arr[$keys[2]]);
		if (array_key_exists($keys[3], $arr)) $this->setTipoNoti($arr[$keys[3]]);
		if (array_key_exists($keys[4], $arr)) $this->setIdFichero($arr[$keys[4]]);
		if (array_key_exists($keys[5], $arr)) $this->setFecha($arr[$keys[5]]);
		if (array_key_exists($keys[6], $arr)) $this->setHoraProceso($arr[$keys[6]]);
		if (array_key_exists($keys[7], $arr)) $this->setProcesado($arr[$keys[7]]);
		if (array_key_exists($keys[8], $arr)) $this->setHayQueParar($arr[$keys[8]]);
		if (array_key_exists($keys[9], $arr)) $this->setModelo($arr[$keys[9]]);
		if (array_key_exists($keys[10], $arr)) $this->setTitularidad($arr[$keys[10]]);
		if (array_key_exists($keys[11], $arr)) $this->setPresentacion($arr[$keys[11]]);
		if (array_key_exists($keys[12], $arr)) $this->setForma($arr[$keys[12]]);
		if (array_key_exists($keys[13], $arr)) $this->setIdUpload($arr[$keys[13]]);
		if (array_key_exists($keys[14], $arr)) $this->setPfRazonS($arr[$keys[14]]);
		if (array_key_exists($keys[15], $arr)) $this->setPfCifNif($arr[$keys[15]]);
		if (array_key_exists($keys[16], $arr)) $this->setPfNombre($arr[$keys[16]]);
		if (array_key_exists($keys[17], $arr)) $this->setPfApellido1($arr[$keys[17]]);
		if (array_key_exists($keys[18], $arr)) $this->setPfApellido2($arr[$keys[18]]);
		if (array_key_exists($keys[19], $arr)) $this->setPfNif($arr[$keys[19]]);
		if (array_key_exists($keys[20], $arr)) $this->setPfCargo($arr[$keys[20]]);
		if (array_key_exists($keys[21], $arr)) $this->setDecRazonS($arr[$keys[21]]);
		if (array_key_exists($keys[22], $arr)) $this->setDecDireccion($arr[$keys[22]]);
		if (array_key_exists($keys[23], $arr)) $this->setDecLocalidad($arr[$keys[23]]);
		if (array_key_exists($keys[24], $arr)) $this->setDecCp($arr[$keys[24]]);
		if (array_key_exists($keys[25], $arr)) $this->setDecProvincia($arr[$keys[25]]);
		if (array_key_exists($keys[26], $arr)) $this->setDecPais($arr[$keys[26]]);
		if (array_key_exists($keys[27], $arr)) $this->setDecTel($arr[$keys[27]]);
		if (array_key_exists($keys[28], $arr)) $this->setDecFax($arr[$keys[28]]);
		if (array_key_exists($keys[29], $arr)) $this->setDecMail($arr[$keys[29]]);
		if (array_key_exists($keys[30], $arr)) $this->setDecForma($arr[$keys[30]]);
		if (array_key_exists($keys[31], $arr)) $this->setRfNombre($arr[$keys[31]]);
		if (array_key_exists($keys[32], $arr)) $this->setRfActividad($arr[$keys[32]]);
		if (array_key_exists($keys[33], $arr)) $this->setRfCif($arr[$keys[33]]);
		if (array_key_exists($keys[34], $arr)) $this->setRfDomicilio($arr[$keys[34]]);
		if (array_key_exists($keys[35], $arr)) $this->setRfLocalidad($arr[$keys[35]]);
		if (array_key_exists($keys[36], $arr)) $this->setRfCp($arr[$keys[36]]);
		if (array_key_exists($keys[37], $arr)) $this->setRfProvincia($arr[$keys[37]]);
		if (array_key_exists($keys[38], $arr)) $this->setRfPais($arr[$keys[38]]);
		if (array_key_exists($keys[39], $arr)) $this->setRfTel($arr[$keys[39]]);
		if (array_key_exists($keys[40], $arr)) $this->setRfFax($arr[$keys[40]]);
		if (array_key_exists($keys[41], $arr)) $this->setRfMail($arr[$keys[41]]);
		if (array_key_exists($keys[42], $arr)) $this->setDrNombreof($arr[$keys[42]]);
		if (array_key_exists($keys[43], $arr)) $this->setDrCif($arr[$keys[43]]);
		if (array_key_exists($keys[44], $arr)) $this->setDrDirpostal($arr[$keys[44]]);
		if (array_key_exists($keys[45], $arr)) $this->setDrLocalidad($arr[$keys[45]]);
		if (array_key_exists($keys[46], $arr)) $this->setDrCp($arr[$keys[46]]);
		if (array_key_exists($keys[47], $arr)) $this->setDrProvincia($arr[$keys[47]]);
		if (array_key_exists($keys[48], $arr)) $this->setDrPais($arr[$keys[48]]);
		if (array_key_exists($keys[49], $arr)) $this->setDrTel($arr[$keys[49]]);
		if (array_key_exists($keys[50], $arr)) $this->setDrFax($arr[$keys[50]]);
		if (array_key_exists($keys[51], $arr)) $this->setDrMail($arr[$keys[51]]);
		if (array_key_exists($keys[52], $arr)) $this->setTipoSolicitud($arr[$keys[52]]);
		if (array_key_exists($keys[53], $arr)) $this->setAcModResponsable($arr[$keys[53]]);
		if (array_key_exists($keys[54], $arr)) $this->setAcModCifNifAnt($arr[$keys[54]]);
		if (array_key_exists($keys[55], $arr)) $this->setAcModServicioUnidad($arr[$keys[55]]);
		if (array_key_exists($keys[56], $arr)) $this->setAcModDisposicion($arr[$keys[56]]);
		if (array_key_exists($keys[57], $arr)) $this->setAcModIdenFinalid($arr[$keys[57]]);
		if (array_key_exists($keys[58], $arr)) $this->setAcModEncargado($arr[$keys[58]]);
		if (array_key_exists($keys[59], $arr)) $this->setAcModEstructSistema($arr[$keys[59]]);
		if (array_key_exists($keys[60], $arr)) $this->setAcModMedidasSeg($arr[$keys[60]]);
		if (array_key_exists($keys[61], $arr)) $this->setAcModOrigen($arr[$keys[61]]);
		if (array_key_exists($keys[62], $arr)) $this->setAcModTransInter($arr[$keys[62]]);
		if (array_key_exists($keys[63], $arr)) $this->setAcModComunicCes($arr[$keys[63]]);
		if (array_key_exists($keys[64], $arr)) $this->setAcSuprMotivos($arr[$keys[64]]);
		if (array_key_exists($keys[65], $arr)) $this->setAcSuprDestinoPrevisiones($arr[$keys[65]]);
		if (array_key_exists($keys[66], $arr)) $this->setAcSuprCifnif($arr[$keys[66]]);
		if (array_key_exists($keys[67], $arr)) $this->setEtNombre($arr[$keys[67]]);
		if (array_key_exists($keys[68], $arr)) $this->setEtCif($arr[$keys[68]]);
		if (array_key_exists($keys[69], $arr)) $this->setEtDirpostal($arr[$keys[69]]);
		if (array_key_exists($keys[70], $arr)) $this->setEtLocalidad($arr[$keys[70]]);
		if (array_key_exists($keys[71], $arr)) $this->setEtCp($arr[$keys[71]]);
		if (array_key_exists($keys[72], $arr)) $this->setEtProvincia($arr[$keys[72]]);
		if (array_key_exists($keys[73], $arr)) $this->setEtPais($arr[$keys[73]]);
		if (array_key_exists($keys[74], $arr)) $this->setEtTel($arr[$keys[74]]);
		if (array_key_exists($keys[75], $arr)) $this->setEtFax($arr[$keys[75]]);
		if (array_key_exists($keys[76], $arr)) $this->setEtMail($arr[$keys[76]]);
		if (array_key_exists($keys[77], $arr)) $this->setIdnNombre($arr[$keys[77]]);
		if (array_key_exists($keys[78], $arr)) $this->setIdnDescripcion($arr[$keys[78]]);
		if (array_key_exists($keys[79], $arr)) $this->setIdnFinalidades($arr[$keys[79]]);
		if (array_key_exists($keys[80], $arr)) $this->setIndicaInte($arr[$keys[80]]);
		if (array_key_exists($keys[81], $arr)) $this->setIndicaOtras($arr[$keys[81]]);
		if (array_key_exists($keys[82], $arr)) $this->setIndicFap($arr[$keys[82]]);
		if (array_key_exists($keys[83], $arr)) $this->setIndicRp($arr[$keys[83]]);
		if (array_key_exists($keys[84], $arr)) $this->setIndicEp($arr[$keys[84]]);
		if (array_key_exists($keys[85], $arr)) $this->setIndicAp($arr[$keys[85]]);
		if (array_key_exists($keys[86], $arr)) $this->setOpColectivos($arr[$keys[86]]);
		if (array_key_exists($keys[87], $arr)) $this->setOpOtroscol($arr[$keys[87]]);
		if (array_key_exists($keys[88], $arr)) $this->setIndIde($arr[$keys[88]]);
		if (array_key_exists($keys[89], $arr)) $this->setIndAs($arr[$keys[89]]);
		if (array_key_exists($keys[90], $arr)) $this->setIndR($arr[$keys[90]]);
		if (array_key_exists($keys[91], $arr)) $this->setIndC($arr[$keys[91]]);
		if (array_key_exists($keys[92], $arr)) $this->setIndRe($arr[$keys[92]]);
		if (array_key_exists($keys[93], $arr)) $this->setIndSal($arr[$keys[93]]);
		if (array_key_exists($keys[94], $arr)) $this->setIndSexo($arr[$keys[94]]);
		if (array_key_exists($keys[95], $arr)) $this->setIndNif($arr[$keys[95]]);
		if (array_key_exists($keys[96], $arr)) $this->setIndSs($arr[$keys[96]]);
		if (array_key_exists($keys[97], $arr)) $this->setIndNA($arr[$keys[97]]);
		if (array_key_exists($keys[98], $arr)) $this->setIndTs($arr[$keys[98]]);
		if (array_key_exists($keys[99], $arr)) $this->setIndDir($arr[$keys[99]]);
		if (array_key_exists($keys[100], $arr)) $this->setIndTel($arr[$keys[100]]);
		if (array_key_exists($keys[101], $arr)) $this->setIndHuella($arr[$keys[101]]);
		if (array_key_exists($keys[102], $arr)) $this->setIndImg($arr[$keys[102]]);
		if (array_key_exists($keys[103], $arr)) $this->setIndMarcas($arr[$keys[103]]);
		if (array_key_exists($keys[104], $arr)) $this->setIndFirma($arr[$keys[104]]);
		if (array_key_exists($keys[105], $arr)) $this->setTdOtrosprotegidos($arr[$keys[105]]);
		if (array_key_exists($keys[106], $arr)) $this->setTdOtrostipificados($arr[$keys[106]]);
		if (array_key_exists($keys[107], $arr)) $this->setTdOtrostiposdatos($arr[$keys[107]]);
		if (array_key_exists($keys[108], $arr)) $this->setTdTratamiento($arr[$keys[108]]);
		if (array_key_exists($keys[109], $arr)) $this->setSeguridad($arr[$keys[109]]);
		if (array_key_exists($keys[110], $arr)) $this->setCdDestinatarios($arr[$keys[110]]);
		if (array_key_exists($keys[111], $arr)) $this->setCdOtrosdestinatarios($arr[$keys[111]]);
		if (array_key_exists($keys[112], $arr)) $this->setPaisesDestina($arr[$keys[112]]);
		if (array_key_exists($keys[113], $arr)) $this->setCatDestina($arr[$keys[113]]);
		if (array_key_exists($keys[114], $arr)) $this->setOtroPaisDestina($arr[$keys[114]]);
	}

	/**
	 * Build a Criteria object containing the values of all modified columns in this object.
	 *
	 * @return     Criteria The Criteria object containing all modified values.
	 */
	public function buildCriteria()
	{
		$criteria = new Criteria(NotificacionesPeer::DATABASE_NAME);

		if ($this->isColumnModified(NotificacionesPeer::NOTID)) $criteria->add(NotificacionesPeer::NOTID, $this->notid);
		if ($this->isColumnModified(NotificacionesPeer::SOPORTE)) $criteria->add(NotificacionesPeer::SOPORTE, $this->soporte);
		if ($this->isColumnModified(NotificacionesPeer::TIPO)) $criteria->add(NotificacionesPeer::TIPO, $this->tipo);
		if ($this->isColumnModified(NotificacionesPeer::TIPO_NOTI)) $criteria->add(NotificacionesPeer::TIPO_NOTI, $this->tipo_noti);
		if ($this->isColumnModified(NotificacionesPeer::ID_FICHERO)) $criteria->add(NotificacionesPeer::ID_FICHERO, $this->id_fichero);
		if ($this->isColumnModified(NotificacionesPeer::FECHA)) $criteria->add(NotificacionesPeer::FECHA, $this->fecha);
		if ($this->isColumnModified(NotificacionesPeer::HORA_PROCESO)) $criteria->add(NotificacionesPeer::HORA_PROCESO, $this->hora_proceso);
		if ($this->isColumnModified(NotificacionesPeer::PROCESADO)) $criteria->add(NotificacionesPeer::PROCESADO, $this->procesado);
		if ($this->isColumnModified(NotificacionesPeer::HAY_QUE_PARAR)) $criteria->add(NotificacionesPeer::HAY_QUE_PARAR, $this->hay_que_parar);
		if ($this->isColumnModified(NotificacionesPeer::MODELO)) $criteria->add(NotificacionesPeer::MODELO, $this->modelo);
		if ($this->isColumnModified(NotificacionesPeer::TITULARIDAD)) $criteria->add(NotificacionesPeer::TITULARIDAD, $this->titularidad);
		if ($this->isColumnModified(NotificacionesPeer::PRESENTACION)) $criteria->add(NotificacionesPeer::PRESENTACION, $this->presentacion);
		if ($this->isColumnModified(NotificacionesPeer::FORMA)) $criteria->add(NotificacionesPeer::FORMA, $this->forma);
		if ($this->isColumnModified(NotificacionesPeer::ID_UPLOAD)) $criteria->add(NotificacionesPeer::ID_UPLOAD, $this->id_upload);
		if ($this->isColumnModified(NotificacionesPeer::PF_RAZON_S)) $criteria->add(NotificacionesPeer::PF_RAZON_S, $this->pf_razon_s);
		if ($this->isColumnModified(NotificacionesPeer::PF_CIF_NIF)) $criteria->add(NotificacionesPeer::PF_CIF_NIF, $this->pf_cif_nif);
		if ($this->isColumnModified(NotificacionesPeer::PF_NOMBRE)) $criteria->add(NotificacionesPeer::PF_NOMBRE, $this->pf_nombre);
		if ($this->isColumnModified(NotificacionesPeer::PF_APELLIDO1)) $criteria->add(NotificacionesPeer::PF_APELLIDO1, $this->pf_apellido1);
		if ($this->isColumnModified(NotificacionesPeer::PF_APELLIDO2)) $criteria->add(NotificacionesPeer::PF_APELLIDO2, $this->pf_apellido2);
		if ($this->isColumnModified(NotificacionesPeer::PF_NIF)) $criteria->add(NotificacionesPeer::PF_NIF, $this->pf_nif);
		if ($this->isColumnModified(NotificacionesPeer::PF_CARGO)) $criteria->add(NotificacionesPeer::PF_CARGO, $this->pf_cargo);
		if ($this->isColumnModified(NotificacionesPeer::DEC_RAZON_S)) $criteria->add(NotificacionesPeer::DEC_RAZON_S, $this->dec_razon_s);
		if ($this->isColumnModified(NotificacionesPeer::DEC_DIRECCION)) $criteria->add(NotificacionesPeer::DEC_DIRECCION, $this->dec_direccion);
		if ($this->isColumnModified(NotificacionesPeer::DEC_LOCALIDAD)) $criteria->add(NotificacionesPeer::DEC_LOCALIDAD, $this->dec_localidad);
		if ($this->isColumnModified(NotificacionesPeer::DEC_CP)) $criteria->add(NotificacionesPeer::DEC_CP, $this->dec_cp);
		if ($this->isColumnModified(NotificacionesPeer::DEC_PROVINCIA)) $criteria->add(NotificacionesPeer::DEC_PROVINCIA, $this->dec_provincia);
		if ($this->isColumnModified(NotificacionesPeer::DEC_PAIS)) $criteria->add(NotificacionesPeer::DEC_PAIS, $this->dec_pais);
		if ($this->isColumnModified(NotificacionesPeer::DEC_TEL)) $criteria->add(NotificacionesPeer::DEC_TEL, $this->dec_tel);
		if ($this->isColumnModified(NotificacionesPeer::DEC_FAX)) $criteria->add(NotificacionesPeer::DEC_FAX, $this->dec_fax);
		if ($this->isColumnModified(NotificacionesPeer::DEC_MAIL)) $criteria->add(NotificacionesPeer::DEC_MAIL, $this->dec_mail);
		if ($this->isColumnModified(NotificacionesPeer::DEC_FORMA)) $criteria->add(NotificacionesPeer::DEC_FORMA, $this->dec_forma);
		if ($this->isColumnModified(NotificacionesPeer::RF_NOMBRE)) $criteria->add(NotificacionesPeer::RF_NOMBRE, $this->rf_nombre);
		if ($this->isColumnModified(NotificacionesPeer::RF_ACTIVIDAD)) $criteria->add(NotificacionesPeer::RF_ACTIVIDAD, $this->rf_actividad);
		if ($this->isColumnModified(NotificacionesPeer::RF_CIF)) $criteria->add(NotificacionesPeer::RF_CIF, $this->rf_cif);
		if ($this->isColumnModified(NotificacionesPeer::RF_DOMICILIO)) $criteria->add(NotificacionesPeer::RF_DOMICILIO, $this->rf_domicilio);
		if ($this->isColumnModified(NotificacionesPeer::RF_LOCALIDAD)) $criteria->add(NotificacionesPeer::RF_LOCALIDAD, $this->rf_localidad);
		if ($this->isColumnModified(NotificacionesPeer::RF_CP)) $criteria->add(NotificacionesPeer::RF_CP, $this->rf_cp);
		if ($this->isColumnModified(NotificacionesPeer::RF_PROVINCIA)) $criteria->add(NotificacionesPeer::RF_PROVINCIA, $this->rf_provincia);
		if ($this->isColumnModified(NotificacionesPeer::RF_PAIS)) $criteria->add(NotificacionesPeer::RF_PAIS, $this->rf_pais);
		if ($this->isColumnModified(NotificacionesPeer::RF_TEL)) $criteria->add(NotificacionesPeer::RF_TEL, $this->rf_tel);
		if ($this->isColumnModified(NotificacionesPeer::RF_FAX)) $criteria->add(NotificacionesPeer::RF_FAX, $this->rf_fax);
		if ($this->isColumnModified(NotificacionesPeer::RF_MAIL)) $criteria->add(NotificacionesPeer::RF_MAIL, $this->rf_mail);
		if ($this->isColumnModified(NotificacionesPeer::DR_NOMBREOF)) $criteria->add(NotificacionesPeer::DR_NOMBREOF, $this->dr_nombreof);
		if ($this->isColumnModified(NotificacionesPeer::DR_CIF)) $criteria->add(NotificacionesPeer::DR_CIF, $this->dr_cif);
		if ($this->isColumnModified(NotificacionesPeer::DR_DIRPOSTAL)) $criteria->add(NotificacionesPeer::DR_DIRPOSTAL, $this->dr_dirpostal);
		if ($this->isColumnModified(NotificacionesPeer::DR_LOCALIDAD)) $criteria->add(NotificacionesPeer::DR_LOCALIDAD, $this->dr_localidad);
		if ($this->isColumnModified(NotificacionesPeer::DR_CP)) $criteria->add(NotificacionesPeer::DR_CP, $this->dr_cp);
		if ($this->isColumnModified(NotificacionesPeer::DR_PROVINCIA)) $criteria->add(NotificacionesPeer::DR_PROVINCIA, $this->dr_provincia);
		if ($this->isColumnModified(NotificacionesPeer::DR_PAIS)) $criteria->add(NotificacionesPeer::DR_PAIS, $this->dr_pais);
		if ($this->isColumnModified(NotificacionesPeer::DR_TEL)) $criteria->add(NotificacionesPeer::DR_TEL, $this->dr_tel);
		if ($this->isColumnModified(NotificacionesPeer::DR_FAX)) $criteria->add(NotificacionesPeer::DR_FAX, $this->dr_fax);
		if ($this->isColumnModified(NotificacionesPeer::DR_MAIL)) $criteria->add(NotificacionesPeer::DR_MAIL, $this->dr_mail);
		if ($this->isColumnModified(NotificacionesPeer::TIPO_SOLICITUD)) $criteria->add(NotificacionesPeer::TIPO_SOLICITUD, $this->tipo_solicitud);
		if ($this->isColumnModified(NotificacionesPeer::AC_MOD_RESPONSABLE)) $criteria->add(NotificacionesPeer::AC_MOD_RESPONSABLE, $this->ac_mod_responsable);
		if ($this->isColumnModified(NotificacionesPeer::AC_MOD_CIF_NIF_ANT)) $criteria->add(NotificacionesPeer::AC_MOD_CIF_NIF_ANT, $this->ac_mod_cif_nif_ant);
		if ($this->isColumnModified(NotificacionesPeer::AC_MOD_SERVICIO_UNIDAD)) $criteria->add(NotificacionesPeer::AC_MOD_SERVICIO_UNIDAD, $this->ac_mod_servicio_unidad);
		if ($this->isColumnModified(NotificacionesPeer::AC_MOD_DISPOSICION)) $criteria->add(NotificacionesPeer::AC_MOD_DISPOSICION, $this->ac_mod_disposicion);
		if ($this->isColumnModified(NotificacionesPeer::AC_MOD_IDEN_FINALID)) $criteria->add(NotificacionesPeer::AC_MOD_IDEN_FINALID, $this->ac_mod_iden_finalid);
		if ($this->isColumnModified(NotificacionesPeer::AC_MOD_ENCARGADO)) $criteria->add(NotificacionesPeer::AC_MOD_ENCARGADO, $this->ac_mod_encargado);
		if ($this->isColumnModified(NotificacionesPeer::AC_MOD_ESTRUCT_SISTEMA)) $criteria->add(NotificacionesPeer::AC_MOD_ESTRUCT_SISTEMA, $this->ac_mod_estruct_sistema);
		if ($this->isColumnModified(NotificacionesPeer::AC_MOD_MEDIDAS_SEG)) $criteria->add(NotificacionesPeer::AC_MOD_MEDIDAS_SEG, $this->ac_mod_medidas_seg);
		if ($this->isColumnModified(NotificacionesPeer::AC_MOD_ORIGEN)) $criteria->add(NotificacionesPeer::AC_MOD_ORIGEN, $this->ac_mod_origen);
		if ($this->isColumnModified(NotificacionesPeer::AC_MOD_TRANS_INTER)) $criteria->add(NotificacionesPeer::AC_MOD_TRANS_INTER, $this->ac_mod_trans_inter);
		if ($this->isColumnModified(NotificacionesPeer::AC_MOD_COMUNIC_CES)) $criteria->add(NotificacionesPeer::AC_MOD_COMUNIC_CES, $this->ac_mod_comunic_ces);
		if ($this->isColumnModified(NotificacionesPeer::AC_SUPR_MOTIVOS)) $criteria->add(NotificacionesPeer::AC_SUPR_MOTIVOS, $this->ac_supr_motivos);
		if ($this->isColumnModified(NotificacionesPeer::AC_SUPR_DESTINO_PREVISIONES)) $criteria->add(NotificacionesPeer::AC_SUPR_DESTINO_PREVISIONES, $this->ac_supr_destino_previsiones);
		if ($this->isColumnModified(NotificacionesPeer::AC_SUPR_CIFNIF)) $criteria->add(NotificacionesPeer::AC_SUPR_CIFNIF, $this->ac_supr_cifnif);
		if ($this->isColumnModified(NotificacionesPeer::ET_NOMBRE)) $criteria->add(NotificacionesPeer::ET_NOMBRE, $this->et_nombre);
		if ($this->isColumnModified(NotificacionesPeer::ET_CIF)) $criteria->add(NotificacionesPeer::ET_CIF, $this->et_cif);
		if ($this->isColumnModified(NotificacionesPeer::ET_DIRPOSTAL)) $criteria->add(NotificacionesPeer::ET_DIRPOSTAL, $this->et_dirpostal);
		if ($this->isColumnModified(NotificacionesPeer::ET_LOCALIDAD)) $criteria->add(NotificacionesPeer::ET_LOCALIDAD, $this->et_localidad);
		if ($this->isColumnModified(NotificacionesPeer::ET_CP)) $criteria->add(NotificacionesPeer::ET_CP, $this->et_cp);
		if ($this->isColumnModified(NotificacionesPeer::ET_PROVINCIA)) $criteria->add(NotificacionesPeer::ET_PROVINCIA, $this->et_provincia);
		if ($this->isColumnModified(NotificacionesPeer::ET_PAIS)) $criteria->add(NotificacionesPeer::ET_PAIS, $this->et_pais);
		if ($this->isColumnModified(NotificacionesPeer::ET_TEL)) $criteria->add(NotificacionesPeer::ET_TEL, $this->et_tel);
		if ($this->isColumnModified(NotificacionesPeer::ET_FAX)) $criteria->add(NotificacionesPeer::ET_FAX, $this->et_fax);
		if ($this->isColumnModified(NotificacionesPeer::ET_MAIL)) $criteria->add(NotificacionesPeer::ET_MAIL, $this->et_mail);
		if ($this->isColumnModified(NotificacionesPeer::IDN_NOMBRE)) $criteria->add(NotificacionesPeer::IDN_NOMBRE, $this->idn_nombre);
		if ($this->isColumnModified(NotificacionesPeer::IDN_DESCRIPCION)) $criteria->add(NotificacionesPeer::IDN_DESCRIPCION, $this->idn_descripcion);
		if ($this->isColumnModified(NotificacionesPeer::IDN_FINALIDADES)) $criteria->add(NotificacionesPeer::IDN_FINALIDADES, $this->idn_finalidades);
		if ($this->isColumnModified(NotificacionesPeer::INDICA_INTE)) $criteria->add(NotificacionesPeer::INDICA_INTE, $this->indica_inte);
		if ($this->isColumnModified(NotificacionesPeer::INDICA_OTRAS)) $criteria->add(NotificacionesPeer::INDICA_OTRAS, $this->indica_otras);
		if ($this->isColumnModified(NotificacionesPeer::INDIC_FAP)) $criteria->add(NotificacionesPeer::INDIC_FAP, $this->indic_fap);
		if ($this->isColumnModified(NotificacionesPeer::INDIC_RP)) $criteria->add(NotificacionesPeer::INDIC_RP, $this->indic_rp);
		if ($this->isColumnModified(NotificacionesPeer::INDIC_EP)) $criteria->add(NotificacionesPeer::INDIC_EP, $this->indic_ep);
		if ($this->isColumnModified(NotificacionesPeer::INDIC_AP)) $criteria->add(NotificacionesPeer::INDIC_AP, $this->indic_ap);
		if ($this->isColumnModified(NotificacionesPeer::OP_COLECTIVOS)) $criteria->add(NotificacionesPeer::OP_COLECTIVOS, $this->op_colectivos);
		if ($this->isColumnModified(NotificacionesPeer::OP_OTROSCOL)) $criteria->add(NotificacionesPeer::OP_OTROSCOL, $this->op_otroscol);
		if ($this->isColumnModified(NotificacionesPeer::IND_IDE)) $criteria->add(NotificacionesPeer::IND_IDE, $this->ind_ide);
		if ($this->isColumnModified(NotificacionesPeer::IND_AS)) $criteria->add(NotificacionesPeer::IND_AS, $this->ind_as);
		if ($this->isColumnModified(NotificacionesPeer::IND_R)) $criteria->add(NotificacionesPeer::IND_R, $this->ind_r);
		if ($this->isColumnModified(NotificacionesPeer::IND_C)) $criteria->add(NotificacionesPeer::IND_C, $this->ind_c);
		if ($this->isColumnModified(NotificacionesPeer::IND_RE)) $criteria->add(NotificacionesPeer::IND_RE, $this->ind_re);
		if ($this->isColumnModified(NotificacionesPeer::IND_SAL)) $criteria->add(NotificacionesPeer::IND_SAL, $this->ind_sal);
		if ($this->isColumnModified(NotificacionesPeer::IND_SEXO)) $criteria->add(NotificacionesPeer::IND_SEXO, $this->ind_sexo);
		if ($this->isColumnModified(NotificacionesPeer::IND_NIF)) $criteria->add(NotificacionesPeer::IND_NIF, $this->ind_nif);
		if ($this->isColumnModified(NotificacionesPeer::IND_SS)) $criteria->add(NotificacionesPeer::IND_SS, $this->ind_ss);
		if ($this->isColumnModified(NotificacionesPeer::IND_N_A)) $criteria->add(NotificacionesPeer::IND_N_A, $this->ind_n_a);
		if ($this->isColumnModified(NotificacionesPeer::IND_TS)) $criteria->add(NotificacionesPeer::IND_TS, $this->ind_ts);
		if ($this->isColumnModified(NotificacionesPeer::IND_DIR)) $criteria->add(NotificacionesPeer::IND_DIR, $this->ind_dir);
		if ($this->isColumnModified(NotificacionesPeer::IND_TEL)) $criteria->add(NotificacionesPeer::IND_TEL, $this->ind_tel);
		if ($this->isColumnModified(NotificacionesPeer::IND_HUELLA)) $criteria->add(NotificacionesPeer::IND_HUELLA, $this->ind_huella);
		if ($this->isColumnModified(NotificacionesPeer::IND_IMG)) $criteria->add(NotificacionesPeer::IND_IMG, $this->ind_img);
		if ($this->isColumnModified(NotificacionesPeer::IND_MARCAS)) $criteria->add(NotificacionesPeer::IND_MARCAS, $this->ind_marcas);
		if ($this->isColumnModified(NotificacionesPeer::IND_FIRMA)) $criteria->add(NotificacionesPeer::IND_FIRMA, $this->ind_firma);
		if ($this->isColumnModified(NotificacionesPeer::TD_OTROSPROTEGIDOS)) $criteria->add(NotificacionesPeer::TD_OTROSPROTEGIDOS, $this->td_otrosprotegidos);
		if ($this->isColumnModified(NotificacionesPeer::TD_OTROSTIPIFICADOS)) $criteria->add(NotificacionesPeer::TD_OTROSTIPIFICADOS, $this->td_otrostipificados);
		if ($this->isColumnModified(NotificacionesPeer::TD_OTROSTIPOSDATOS)) $criteria->add(NotificacionesPeer::TD_OTROSTIPOSDATOS, $this->td_otrostiposdatos);
		if ($this->isColumnModified(NotificacionesPeer::TD_TRATAMIENTO)) $criteria->add(NotificacionesPeer::TD_TRATAMIENTO, $this->td_tratamiento);
		if ($this->isColumnModified(NotificacionesPeer::SEGURIDAD)) $criteria->add(NotificacionesPeer::SEGURIDAD, $this->seguridad);
		if ($this->isColumnModified(NotificacionesPeer::CD_DESTINATARIOS)) $criteria->add(NotificacionesPeer::CD_DESTINATARIOS, $this->cd_destinatarios);
		if ($this->isColumnModified(NotificacionesPeer::CD_OTROSDESTINATARIOS)) $criteria->add(NotificacionesPeer::CD_OTROSDESTINATARIOS, $this->cd_otrosdestinatarios);
		if ($this->isColumnModified(NotificacionesPeer::PAISES_DESTINA)) $criteria->add(NotificacionesPeer::PAISES_DESTINA, $this->paises_destina);
		if ($this->isColumnModified(NotificacionesPeer::CAT_DESTINA)) $criteria->add(NotificacionesPeer::CAT_DESTINA, $this->cat_destina);
		if ($this->isColumnModified(NotificacionesPeer::OTRO_PAIS_DESTINA)) $criteria->add(NotificacionesPeer::OTRO_PAIS_DESTINA, $this->otro_pais_destina);

		return $criteria;
	}

	/**
	 * Builds a Criteria object containing the primary key for this object.
	 *
	 * Unlike buildCriteria() this method includes the primary key values regardless
	 * of whether or not they have been modified.
	 *
	 * @return     Criteria The Criteria object containing value(s) for primary key(s).
	 */
	public function buildPkeyCriteria()
	{
		$criteria = new Criteria(NotificacionesPeer::DATABASE_NAME);

		$criteria->add(NotificacionesPeer::NOTID, $this->notid);

		return $criteria;
	}

	/**
	 * Returns the primary key for this object (row).
	 * @return     int
	 */
	public function getPrimaryKey()
	{
		return $this->getNotid();
	}

	/**
	 * Generic method to set the primary key (notid column).
	 *
	 * @param      int $key Primary key.
	 * @return     void
	 */
	public function setPrimaryKey($key)
	{
		$this->setNotid($key);
	}

	/**
	 * Sets contents of passed object to values from current object.
	 *
	 * If desired, this method can also make copies of all associated (fkey referrers)
	 * objects.
	 *
	 * @param      object $copyObj An object of Notificaciones (or compatible) type.
	 * @param      boolean $deepCopy Whether to also copy all rows that refer (by fkey) to the current row.
	 * @throws     PropelException
	 */
	public function copyInto($copyObj, $deepCopy = false)
	{

		$copyObj->setSoporte($this->soporte);

		$copyObj->setTipo($this->tipo);

		$copyObj->setTipoNoti($this->tipo_noti);

		$copyObj->setIdFichero($this->id_fichero);

		$copyObj->setFecha($this->fecha);

		$copyObj->setHoraProceso($this->hora_proceso);

		$copyObj->setProcesado($this->procesado);

		$copyObj->setHayQueParar($this->hay_que_parar);

		$copyObj->setModelo($this->modelo);

		$copyObj->setTitularidad($this->titularidad);

		$copyObj->setPresentacion($this->presentacion);

		$copyObj->setForma($this->forma);

		$copyObj->setIdUpload($this->id_upload);

		$copyObj->setPfRazonS($this->pf_razon_s);

		$copyObj->setPfCifNif($this->pf_cif_nif);

		$copyObj->setPfNombre($this->pf_nombre);

		$copyObj->setPfApellido1($this->pf_apellido1);

		$copyObj->setPfApellido2($this->pf_apellido2);

		$copyObj->setPfNif($this->pf_nif);

		$copyObj->setPfCargo($this->pf_cargo);

		$copyObj->setDecRazonS($this->dec_razon_s);

		$copyObj->setDecDireccion($this->dec_direccion);

		$copyObj->setDecLocalidad($this->dec_localidad);

		$copyObj->setDecCp($this->dec_cp);

		$copyObj->setDecProvincia($this->dec_provincia);

		$copyObj->setDecPais($this->dec_pais);

		$copyObj->setDecTel($this->dec_tel);

		$copyObj->setDecFax($this->dec_fax);

		$copyObj->setDecMail($this->dec_mail);

		$copyObj->setDecForma($this->dec_forma);

		$copyObj->setRfNombre($this->rf_nombre);

		$copyObj->setRfActividad($this->rf_actividad);

		$copyObj->setRfCif($this->rf_cif);

		$copyObj->setRfDomicilio($this->rf_domicilio);

		$copyObj->setRfLocalidad($this->rf_localidad);

		$copyObj->setRfCp($this->rf_cp);

		$copyObj->setRfProvincia($this->rf_provincia);

		$copyObj->setRfPais($this->rf_pais);

		$copyObj->setRfTel($this->rf_tel);

		$copyObj->setRfFax($this->rf_fax);

		$copyObj->setRfMail($this->rf_mail);

		$copyObj->setDrNombreof($this->dr_nombreof);

		$copyObj->setDrCif($this->dr_cif);

		$copyObj->setDrDirpostal($this->dr_dirpostal);

		$copyObj->setDrLocalidad($this->dr_localidad);

		$copyObj->setDrCp($this->dr_cp);

		$copyObj->setDrProvincia($this->dr_provincia);

		$copyObj->setDrPais($this->dr_pais);

		$copyObj->setDrTel($this->dr_tel);

		$copyObj->setDrFax($this->dr_fax);

		$copyObj->setDrMail($this->dr_mail);

		$copyObj->setTipoSolicitud($this->tipo_solicitud);

		$copyObj->setAcModResponsable($this->ac_mod_responsable);

		$copyObj->setAcModCifNifAnt($this->ac_mod_cif_nif_ant);

		$copyObj->setAcModServicioUnidad($this->ac_mod_servicio_unidad);

		$copyObj->setAcModDisposicion($this->ac_mod_disposicion);

		$copyObj->setAcModIdenFinalid($this->ac_mod_iden_finalid);

		$copyObj->setAcModEncargado($this->ac_mod_encargado);

		$copyObj->setAcModEstructSistema($this->ac_mod_estruct_sistema);

		$copyObj->setAcModMedidasSeg($this->ac_mod_medidas_seg);

		$copyObj->setAcModOrigen($this->ac_mod_origen);

		$copyObj->setAcModTransInter($this->ac_mod_trans_inter);

		$copyObj->setAcModComunicCes($this->ac_mod_comunic_ces);

		$copyObj->setAcSuprMotivos($this->ac_supr_motivos);

		$copyObj->setAcSuprDestinoPrevisiones($this->ac_supr_destino_previsiones);

		$copyObj->setAcSuprCifnif($this->ac_supr_cifnif);

		$copyObj->setEtNombre($this->et_nombre);

		$copyObj->setEtCif($this->et_cif);

		$copyObj->setEtDirpostal($this->et_dirpostal);

		$copyObj->setEtLocalidad($this->et_localidad);

		$copyObj->setEtCp($this->et_cp);

		$copyObj->setEtProvincia($this->et_provincia);

		$copyObj->setEtPais($this->et_pais);

		$copyObj->setEtTel($this->et_tel);

		$copyObj->setEtFax($this->et_fax);

		$copyObj->setEtMail($this->et_mail);

		$copyObj->setIdnNombre($this->idn_nombre);

		$copyObj->setIdnDescripcion($this->idn_descripcion);

		$copyObj->setIdnFinalidades($this->idn_finalidades);

		$copyObj->setIndicaInte($this->indica_inte);

		$copyObj->setIndicaOtras($this->indica_otras);

		$copyObj->setIndicFap($this->indic_fap);

		$copyObj->setIndicRp($this->indic_rp);

		$copyObj->setIndicEp($this->indic_ep);

		$copyObj->setIndicAp($this->indic_ap);

		$copyObj->setOpColectivos($this->op_colectivos);

		$copyObj->setOpOtroscol($this->op_otroscol);

		$copyObj->setIndIde($this->ind_ide);

		$copyObj->setIndAs($this->ind_as);

		$copyObj->setIndR($this->ind_r);

		$copyObj->setIndC($this->ind_c);

		$copyObj->setIndRe($this->ind_re);

		$copyObj->setIndSal($this->ind_sal);

		$copyObj->setIndSexo($this->ind_sexo);

		$copyObj->setIndNif($this->ind_nif);

		$copyObj->setIndSs($this->ind_ss);

		$copyObj->setIndNA($this->ind_n_a);

		$copyObj->setIndTs($this->ind_ts);

		$copyObj->setIndDir($this->ind_dir);

		$copyObj->setIndTel($this->ind_tel);

		$copyObj->setIndHuella($this->ind_huella);

		$copyObj->setIndImg($this->ind_img);

		$copyObj->setIndMarcas($this->ind_marcas);

		$copyObj->setIndFirma($this->ind_firma);

		$copyObj->setTdOtrosprotegidos($this->td_otrosprotegidos);

		$copyObj->setTdOtrostipificados($this->td_otrostipificados);

		$copyObj->setTdOtrostiposdatos($this->td_otrostiposdatos);

		$copyObj->setTdTratamiento($this->td_tratamiento);

		$copyObj->setSeguridad($this->seguridad);

		$copyObj->setCdDestinatarios($this->cd_destinatarios);

		$copyObj->setCdOtrosdestinatarios($this->cd_otrosdestinatarios);

		$copyObj->setPaisesDestina($this->paises_destina);

		$copyObj->setCatDestina($this->cat_destina);

		$copyObj->setOtroPaisDestina($this->otro_pais_destina);


		$copyObj->setNew(true);

		$copyObj->setNotid(NULL); // this is a auto-increment column, so set to default value

	}

	/**
	 * Makes a copy of this object that will be inserted as a new row in table when saved.
	 * It creates a new object filling in the simple attributes, but skipping any primary
	 * keys that are defined for the table.
	 *
	 * If desired, this method can also make copies of all associated (fkey referrers)
	 * objects.
	 *
	 * @param      boolean $deepCopy Whether to also copy all rows that refer (by fkey) to the current row.
	 * @return     Notificaciones Clone of current object.
	 * @throws     PropelException
	 */
	public function copy($deepCopy = false)
	{
		// we use get_class(), because this might be a subclass
		$clazz = get_class($this);
		$copyObj = new $clazz();
		$this->copyInto($copyObj, $deepCopy);
		return $copyObj;
	}

	/**
	 * Returns a peer instance associated with this om.
	 *
	 * Since Peer classes are not to have any instance attributes, this method returns the
	 * same instance for all member of this class. The method could therefore
	 * be static, but this would prevent one from overriding the behavior.
	 *
	 * @return     NotificacionesPeer
	 */
	public function getPeer()
	{
		if (self::$peer === null) {
			self::$peer = new NotificacionesPeer();
		}
		return self::$peer;
	}

	/**
	 * Declares an association between this object and a Formulario object.
	 *
	 * @param      Formulario $v
	 * @return     Notificaciones The current object (for fluent API support)
	 * @throws     PropelException
	 */
	public function setFormulario(Formulario $v = null)
	{
		if ($v === null) {
			$this->setIdFichero(NULL);
		} else {
			$this->setIdFichero($v->getIdFormulario());
		}

		$this->aFormulario = $v;

		// Add binding for other direction of this n:n relationship.
		// If this object has already been added to the Formulario object, it will not be re-added.
		if ($v !== null) {
			$v->addNotificaciones($this);
		}

		return $this;
	}


	/**
	 * Get the associated Formulario object
	 *
	 * @param      PropelPDO Optional Connection object.
	 * @return     Formulario The associated Formulario object.
	 * @throws     PropelException
	 */
	public function getFormulario(PropelPDO $con = null)
	{
		if ($this->aFormulario === null && ($this->id_fichero !== null)) {
			$c = new Criteria(FormularioPeer::DATABASE_NAME);
			$c->add(FormularioPeer::ID_FORMULARIO, $this->id_fichero);
			$this->aFormulario = FormularioPeer::doSelectOne($c, $con);
			/* The following can be used additionally to
			   guarantee the related object contains a reference
			   to this object.  This level of coupling may, however, be
			   undesirable since it could result in an only partially populated collection
			   in the referenced object.
			   $this->aFormulario->addNotificacioness($this);
			 */
		}
		return $this->aFormulario;
	}

	/**
	 * Resets all collections of referencing foreign keys.
	 *
	 * This method is a user-space workaround for PHP's inability to garbage collect objects
	 * with circular references.  This is currently necessary when using Propel in certain
	 * daemon or large-volumne/high-memory operations.
	 *
	 * @param      boolean $deep Whether to also clear the references on all associated objects.
	 */
	public function clearAllReferences($deep = false)
	{
		if ($deep) {
		} // if ($deep)

			$this->aFormulario = null;
	}


  public function __call($method, $arguments)
  {
    if (!$callable = sfMixer::getCallable('BaseNotificaciones:'.$method))
    {
      throw new sfException(sprintf('Call to undefined method BaseNotificaciones::%s', $method));
    }

    array_unshift($arguments, $this);

    return call_user_func_array($callable, $arguments);
  }


} // BaseNotificaciones
