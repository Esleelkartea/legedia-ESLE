<?php


/**
 * This class adds structure of 'tarea' table to 'legedia' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Wed Oct 27 21:17:37 2010
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class TareaMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.TareaMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(TareaPeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(TareaPeer::TABLE_NAME);
		$tMap->setPhpName('Tarea');
		$tMap->setClassname('Tarea');

		$tMap->setUseIdGenerator(true);

		$tMap->addPrimaryKey('ID_TAREA', 'IdTarea', 'INTEGER', true, null);

		$tMap->addForeignKey('ID_EMPRESA', 'IdEmpresa', 'INTEGER', 'empresa', 'ID_EMPRESA', true, null);

		$tMap->addForeignKey('ID_ESTADO_TAREA', 'IdEstadoTarea', 'INTEGER', 'parametro', 'ID_PARAMETRO', true, null);

		$tMap->addForeignKey('ID_USUARIO', 'IdUsuario', 'INTEGER', 'usuario', 'ID_USUARIO', true, null);

		$tMap->addColumn('AVISAR_EMAIL', 'AvisarEmail', 'BOOLEAN', false, null);

		$tMap->addColumn('AVISAR_EMAIL_FIN', 'AvisarEmailFin', 'BOOLEAN', false, null);

		$tMap->addColumn('ES_EVENTO', 'EsEvento', 'BOOLEAN', false, null);

		$tMap->addColumn('FECHA_INICIO', 'FechaInicio', 'TIMESTAMP', false, null);

		$tMap->addColumn('FECHA_VENCIMIENTO', 'FechaVencimiento', 'TIMESTAMP', false, null);

		$tMap->addColumn('RESUMEN', 'Resumen', 'VARCHAR', false, 255);

		$tMap->addColumn('DESCRIPCION', 'Descripcion', 'LONGVARCHAR', false, null);

		$tMap->addForeignKey('ID_CAMPO', 'IdCampo', 'INTEGER', 'campo', 'ID_CAMPO', false, null);

		$tMap->addForeignKey('ID_FORMULARIO', 'IdFormulario', 'INTEGER', 'formulario', 'ID_FORMULARIO', false, null);

		$tMap->addColumn('CREATED_AT', 'CreatedAt', 'TIMESTAMP', false, null);

		$tMap->addColumn('UPDATED_AT', 'UpdatedAt', 'TIMESTAMP', false, null);

	} // doBuild()

} // TareaMapBuilder
