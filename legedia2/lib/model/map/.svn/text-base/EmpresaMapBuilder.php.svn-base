<?php


/**
 * This class adds structure of 'empresa' table to 'legedia' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Wed Oct 27 21:17:36 2010
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class EmpresaMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.EmpresaMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(EmpresaPeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(EmpresaPeer::TABLE_NAME);
		$tMap->setPhpName('Empresa');
		$tMap->setClassname('Empresa');

		$tMap->setUseIdGenerator(true);

		$tMap->addPrimaryKey('ID_EMPRESA', 'IdEmpresa', 'INTEGER', true, null);

		$tMap->addForeignKey('ID_PROVINCIA', 'IdProvincia', 'INTEGER', 'provincia', 'ID_PROVINCIA', true, null);

		$tMap->addForeignKey('ID_USUARIO', 'IdUsuario', 'INTEGER', 'usuario', 'ID_USUARIO', true, null);

		$tMap->addColumn('NOMBRE', 'Nombre', 'VARCHAR', false, 150);

		$tMap->addForeignKey('ID_ACTIVIDAD', 'IdActividad', 'VARCHAR', 'taula1', 'T1ID', true, 3);

		$tMap->addColumn('TELEFONO', 'Telefono', 'VARCHAR', false, 20);

		$tMap->addColumn('FAX', 'Fax', 'VARCHAR', false, 20);

		$tMap->addColumn('EMAIL', 'Email', 'VARCHAR', false, 50);

		$tMap->addColumn('DOMICILIO', 'Domicilio', 'LONGVARCHAR', false, null);

		$tMap->addColumn('POBLACION', 'Poblacion', 'VARCHAR', false, 255);

		$tMap->addColumn('CODIGO_POSTAL', 'CodigoPostal', 'VARCHAR', false, 10);

		$tMap->addColumn('CIF', 'Cif', 'VARCHAR', false, 45);

		$tMap->addColumn('LOGO_MIN', 'LogoMin', 'VARCHAR', false, 150);

		$tMap->addColumn('LOGO_MED', 'LogoMed', 'VARCHAR', false, 150);

		$tMap->addColumn('LOGO_MAX', 'LogoMax', 'VARCHAR', false, 150);

		$tMap->addColumn('ID_VTIGER', 'IdVtiger', 'INTEGER', false, null);

		$tMap->addColumn('SMTP_SERVER', 'SmtpServer', 'VARCHAR', false, 150);

		$tMap->addColumn('SMTP_USER', 'SmtpUser', 'VARCHAR', false, 150);

		$tMap->addColumn('SMTP_PASSWORD', 'SmtpPassword', 'VARCHAR', false, 255);

		$tMap->addColumn('SMTP_PORT', 'SmtpPort', 'INTEGER', false, null);

		$tMap->addColumn('SENDER_ADDRESS', 'SenderAddress', 'VARCHAR', false, 150);

		$tMap->addColumn('SENDER_NAME', 'SenderName', 'VARCHAR', false, 100);

		$tMap->addColumn('COLOR1', 'Color1', 'VARCHAR', false, 10);

		$tMap->addColumn('COLOR2', 'Color2', 'VARCHAR', false, 10);

		$tMap->addColumn('COLOR3', 'Color3', 'VARCHAR', false, 10);

		$tMap->addColumn('COLOR4', 'Color4', 'VARCHAR', false, 10);

		$tMap->addColumn('COLOR_LETRA1', 'ColorLetra1', 'VARCHAR', false, 10);

		$tMap->addColumn('COLOR_LETRA2', 'ColorLetra2', 'VARCHAR', false, 10);

		$tMap->addColumn('COLOR_LETRA3', 'ColorLetra3', 'VARCHAR', false, 10);

		$tMap->addColumn('COLOR_LETRA4', 'ColorLetra4', 'VARCHAR', false, 10);

		$tMap->addColumn('CREATED_AT', 'CreatedAt', 'TIMESTAMP', false, null);

		$tMap->addColumn('UPDATED_AT', 'UpdatedAt', 'TIMESTAMP', false, null);

		$tMap->addColumn('BORRADO', 'Borrado', 'BOOLEAN', false, null);

	} // doBuild()

} // EmpresaMapBuilder
