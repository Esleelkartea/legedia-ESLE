<?php


/**
 * This class adds structure of 'usuario' table to 'legedia' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Wed Oct 27 21:17:36 2010
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class UsuarioMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.UsuarioMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(UsuarioPeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(UsuarioPeer::TABLE_NAME);
		$tMap->setPhpName('Usuario');
		$tMap->setClassname('Usuario');

		$tMap->setUseIdGenerator(true);

		$tMap->addPrimaryKey('ID_USUARIO', 'IdUsuario', 'INTEGER', true, null);

		$tMap->addForeignKey('ID_IDIOMA', 'IdIdioma', 'VARCHAR', 'catalogue', 'CAT_ID', true, 6);

		$tMap->addColumn('USUARIO', 'Usuario', 'VARCHAR', false, 30);

		$tMap->addColumn('CLAVE', 'Clave', 'VARCHAR', false, 255);

		$tMap->addColumn('NOMBRE', 'Nombre', 'VARCHAR', false, 150);

		$tMap->addColumn('APELLIDO1', 'Apellido1', 'VARCHAR', false, 100);

		$tMap->addColumn('APELLIDO2', 'Apellido2', 'VARCHAR', false, 100);

		$tMap->addColumn('DNI', 'Dni', 'VARCHAR', false, 10);

		$tMap->addColumn('DOMICILIO', 'Domicilio', 'LONGVARCHAR', false, null);

		$tMap->addColumn('POBLACION', 'Poblacion', 'VARCHAR', false, 50);

		$tMap->addColumn('CP', 'Cp', 'INTEGER', false, 9);

		$tMap->addForeignKey('ID_PROVINCIA', 'IdProvincia', 'INTEGER', 'provincia', 'ID_PROVINCIA', false, 11);

		$tMap->addColumn('PAIS', 'Pais', 'VARCHAR', false, 80);

		$tMap->addColumn('MOVIL', 'Movil', 'VARCHAR', false, 15);

		$tMap->addColumn('TELEFONO', 'Telefono', 'VARCHAR', false, 15);

		$tMap->addColumn('FAX', 'Fax', 'VARCHAR', false, 15);

		$tMap->addColumn('ULTIMA_VISITA', 'UltimaVisita', 'TIMESTAMP', false, null);

		$tMap->addColumn('EMAIL', 'Email', 'VARCHAR', false, 45);

		$tMap->addColumn('PUBLIC_KEY', 'PublicKey', 'LONGVARCHAR', false, null);

		$tMap->addColumn('ES_EXTERNO', 'EsExterno', 'BOOLEAN', false, null);

		$tMap->addColumn('ALERTA_EMAIL', 'AlertaEmail', 'BOOLEAN', false, null);

		$tMap->addColumn('CREATED_AT', 'CreatedAt', 'TIMESTAMP', false, null);

		$tMap->addColumn('UPDATED_AT', 'UpdatedAt', 'TIMESTAMP', false, null);

		$tMap->addColumn('FECHA_BORRADO', 'FechaBorrado', 'TIMESTAMP', false, null);

	} // doBuild()

} // UsuarioMapBuilder
